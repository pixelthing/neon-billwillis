{"version":3,"sources":["base/variables-breakpoints.scss","base/mixins.scss","base/helpers-breakpoints.scss","base/helpers-reset.scss","base/variables-colors.scss","base/variables-typography.scss","base/helpers-animations.scss","mixins/helper-lazyload.scss","mixins/helper-objectfit.scss","patterns/sections.scss","base/variables.scss","base/helpers-typography.scss","modules/text/text.scss"],"names":[],"mappings":"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","file":"shared.css","sourcesContent":["// Breakpoints\n//\n// Status: near final.\n//\n// Styleguide 1.13.\n\n// Variables - Width Breakpoints\n//\n// Responsive design breakpoints are designed around common scenarios. Content should be designed to reformat when the content demands it, not ideals of what a device is, but the truth is that common breakpoints make development easier and more reliable by giving clear, and predictable, starting points to work from. If the content demands more finess, it should dictate it's own breakpoints.\n//\n// $xs-and-up - min-width: XS and greater: larger than all known phones in portrait, most small (7\") tablets\n// $sm-and-up - min-width: SM and greater: larger (9\") tablets in portrait\n// $md-and-up - min-width: MD and greater: smaller desktops and larger (9\") tablets in landscape\n// $lg-and-up - min-width: LG and greater: larger desktops, very large tablets\n// $less-than-xs - max-width: up to XXS\n// $less-than-sm - max-width: up to XS\n// $less-than-md - max-width: up to MD\n// $less-than-lg - max-width: up to LG\n//  \n// markup:\n// <div style=\"--width-var: calc({$modifiers}); width: {$modifiers}; width: var(--width-var); margin: 15px auto; padding: 5px 0; border: 1px solid #79ad3e; color: #79ad3e; background: #ded; text-align: center;\">{$modifiers}</div>\n// <!-- the CSS variables stuff is just to demonstrate this SASS in this pattern guide. It's not recommended -->\n//\n// Styleguide 1.13.1.\n\n$xs-and-up: 600px;\n$sm-and-up: 768px;\n$md-and-up: 980px;\n$lg-and-up: 1200px;\n\n$less-than-xs: $xs-and-up - 1px;\n$less-than-sm: $sm-and-up - 1px;\n$less-than-md: $md-and-up - 1px;\n$less-than-lg: $lg-and-up - 1px;\n\n// Variables - Height Breakpoints\n//\n// Height breakpoints aid a better user experience on shallow screens, such as smaller laptops or windows that have a lot of browser UI. If your content demands more precise breakpoints, create your own, but the ones below are used to start the process about thinking of what content should look like on different height screens. Mobile devices often override these breakpoints with width breakpoints following them, but the decision of what to do for each combination of screen size and orientation should be left up to the design and dev team.\n//\n// $h-sm-and-up - min-height: 400px and greater\n// $h-md-and-up - min-height: 700px and greater\n// $h-lg-and-up - min-height: 1200px and greater\n// $h-less-than-sm - max-height: 399px\n// $h-less-than-md - max-height: 699px\n// $h-less-than-lg - max-height: 1200px\n//  \n// markup:\n// <div style=\"--height-var: calc({$modifiers}); width: 300px; min-width: 20%; margin: 15px auto; height: {$modifiers}; height: var(--height-var);  padding: 0 15px; border: 1px solid #79ad3e; background: #ded; color: #79ad3e; display: flex; align-items: center; justify-content: center;\">{$modifiers}</div>\n// <!-- the CSS variables stuff is just to demonstrate this SASS in this pattern guide. It's not recommended -->\n//\n// Styleguide 1.13.2\n\n/* height */ \n\n$h-sm-and-up: 500px; // why 460? biger than an iPhone 6+ on it's side is 414 high, a Nexus 6P is 412px. More like a tablet on it's side. (I know, don't fit to the device, blah blah)\n$h-md-and-up: 721px; // why 721? because Samsung S8s are 720px high, and when combined with Samsung Browser - which can see 100vh as 622px or 720px high depending on if you're scrolled or not - we don't want elements to move around if the only thing you're doing is scrolling the page.\n$h-lg-and-up: 1200px;\n\n$h-less-than-sm: $h-sm-and-up - 1px;\n$h-less-than-md: $h-md-and-up - 1px;\n$h-less-than-lg: $h-lg-and-up - 1px;","/* RESPONSIVE */\n\n@mixin t-respond-to-webkit() {\n    @media screen and (-webkit-min-device-pixel-ratio:0) { @content; }\n}\n@mixin t-respond-to-trident() {\n    @media screen and (min-width: 0 \\0) { @content; }\n}\n@mixin t-respond-to-firefox() {\n    @media screen and (min--moz-device-pixel-ratio:0) { @content; } \n}\n\n/* TYPOGRAPHY */\n\n@mixin typo-regular() {\n    font-family: $font-default;\n    font-weight: normal;\n}\n@mixin typo-emphasis() {\n    font-family: $font-default;\n    font-weight: 550;\n}\n@mixin typo-serif() {\n    font-family: $font-serif;\n    font-weight: normal;\n    transform: scale(0.978);\n    transform-origin: 50% 50%;\n    .wf-mrseavesromanlining-n4-active & {\n        transform: none;\n    }\n}\n@mixin typo-smallcaps() {\n    font-family: $font-smallcaps;\n    font-weight: normal;\n    font-style: normal;\n    font-weight: normal;\n    letter-spacing: 0.07em;\n    .wf-mrseavesromansmallcaps-n4-active & {\n        letter-spacing: normal;\n    }\n}\n@mixin ellipsis() {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n\n/* ELEMENTS */\n\n@mixin clearfix {\n    &:after {\n        content: \"\";\n        display: table;\n        clear: both;\n    }\n}\n\n@mixin clearmargin { // clears margins bubbling up (t.ex, a headline with a neg top margin will move the whole containing section up that amount)\n    &:before {\n        content: '';\n        display: block;\n        height: 1px;\n        margin: 0 0 -1px;\n        padding: 0;\n    }\n}\n\n@mixin normalize-button() {\n    -webkit-appearance: none;\n    display: inline-block;\n    vertical-align: middle;\n    margin: 0;\n    padding: 0;\n    color: inherit;\n    background-color: transparent;\n    border-width: 0;\n    border-radius: 0;\n    font-family: $font-default;\n    font-weight: normal;\n    font-size: 1em;\n    line-height: inherit;\n    cursor: pointer;\n    outline: none;\n    -webkit-tap-highlight-color: rgba(255,255,255,0);\n}\n\n@mixin close-button() {\n    @include normalize-button();\n    width: 1.4em;\n    height: 1.4em;\n    padding: 0.2em;\n    font-size: $font-size-md2;\n    color: #000;\n    background: transparent;\n    border-radius: 100%;\n    transition: all 500ms;\n    -webkit-tap-highlight-color: rgba(255,255,255,0);\n    @media (pointer: coarse) { // on tap, show that the button was tapped when you take your finger off\n        transition-delay: 300ms;\n    }\n    @media (prefers-reduced-motion) {\n        transition: all 0ms;\n    }\n    &:focus {\n        @include a11yShadowFocus(noRadius);\n        @include a11yBGFocus();\n    }\n    &:active {\n        color: $color-primary;\n        transition-delay: 0ms;\n        background-color: lighten($color-primary, 60%);\n    }\n    .Icon {\n        display: block;\n        pointer-events: none;\n    }\n}\n\n@mixin ui-block-size($type: null) {\n    font-size: $font-size-md;\n    @if $type == 'input' {\n        padding: $btn-regular-padding-top $input-regular-padding-horiz $btn-regular-padding-bottom;\n    } @else {\n        padding: $btn-regular-padding-top $btn-regular-padding-horiz $btn-regular-padding-bottom;\n        @media (max-width: $less-than-xs) {\n            padding-left: $btn-skinny-padding-horiz;\n            padding-right: $btn-skinny-padding-horiz;\n        }\n    }\n}\n\n@mixin link() {\n    @include normalize-button();\n    vertical-align: baseline;\n    color: $color-link;\n    border-color: currentColor;\n    text-align: left;\n    text-decoration: none;\n    font-family: inherit;\n    transition-property: color, background-color;\n    transition-duration: 300ms;\n    -webkit-tap-highlight-color: rgba(255,255,255,0);\n    &:focus {\n        @include a11yTextFocus();\n    }\n    &:visited {\n        color: $color-link-visited;\n    }\n    &:hover {\n        color: $color-link-hover;\n        @media (pointer: coarse) {\n            color: $color-link;\n            border-color: $color-link;\n        }\n    }\n    &:active {\n        color: $color-link-active;\n        transition-duration: 0ms;\n    }\n}\n\n@mixin underlined ($dashed: false) {\n    display: inline-block;\n    vertical-align: baseline;\n    padding-bottom: 0px;\n    @if $dashed {\n        border-bottom: 1px dashed currentColor;\n    } @else {\n        border-bottom: 1px solid currentColor;\n    }\n}\n\n@mixin disc () {\n    @include typo-emphasis();\n    box-sizing: border-box;\n    display: inline-block;\n    font-size: 1em;\n    font-weight: bold;\n    width: $disc-size;\n    height: $disc-size;\n    padding: 0;\n    line-height: $disc-size;\n    color: #fff;\n    background: #999;\n    border-radius: 1000px;\n    text-align: center;\n    .edge &,\n    .ie & {\n        line-height: $disc-size - 0.15em;\n    }\n    .android & {\n        line-height: $disc-size + 0.1em;\n    }\n}\n\n@mixin pop-over($selectorOuter, $selectorButton, $event:'hover', $color:$color-primary) {\n    \n    #{$selectorOuter} {\n        @include normalize-button();\n        position: relative;\n        font-size: 1rem;\n        line-height: normal;\n        vertical-align: top;\n        white-space: normal;\n        text-align: left;\n        &-full {\n            position: absolute;\n            top: 40px;\n            top: calc(100% + 9px);\n            right: 1px;\n            z-index: 100;\n            width: 0px;\n            max-height: 0px;\n            overflow: hidden;\n            background-color: #fff;\n            border: 1px solid $color;\n            font-size: 1rem;\n            opacity: 0;\n            transform: translate3d(0,10px,0);\n            transition: opacity, transform, max-height, width, padding;\n            transition-duration: 300ms, 300ms, 0ms, 0ms, 0ms;\n            transition-delay: 100ms, 100ms, 400ms, 400ms, 400ms;\n            #{$selectorOuter}:hover & {\n                @media (pointer: coarse) {\n                    width: 0;\n                    max-height: 0;\n                }\n            }\n            #{$selectorOuter}--active {\n                width: 250px;\n                max-width: calc(100vw - 20px);\n                max-height: 999em;\n                opacity: 1;\n                padding: $gutter*2;\n                transform: translate3d(0,0,0);\n                transition-delay: 300ms;\n                &--titled {\n                    padding-top: $gutter*3;\n                }\n                &--md {\n                    width: 320px;\n                }\n                &--lg {\n                    width: 450px;\n                }\n                &--xl {\n                    width: 800px;\n                }\n            }\n            &--centered {\n                text-align: center;\n            }\n        }\n        &-title {\n            position: absolute;\n            top: $gutter;\n            left: $gutter;\n            color: $color;\n            text-align: left;\n        }\n    }\n    #{$selectorButton} {\n        &:before,\n        &:after {\n            content: '';\n            position: absolute;\n            top: 100%;\n            left: 50%;\n            z-index: 101;\n            max-height: 0;\n            margin-left: -10px;\n            border-right: 10px solid transparent;\n            border-left: 10px solid transparent;\n            border-bottom: 10px solid $color-primary;\n            border-width: 0;\n            opacity: 0;\n            overflow: hidden;\n            transition: opacity, transform, border-width;\n            transition-duration: 300ms, 300ms, 0ms;\n            transition-delay: 100ms, 100ms, 400ms;\n            transform: translate3d(0,10px,0);\n            #{$selectorOuter}:hover & {\n                @media (pointer: coarse) {\n                    max-height: 0;\n                }\n            }\n            #{$selectorOuter}--open & {\n                opacity: 1;\n                max-height: 10px;\n                transform: translate3d(0,0,0);\n                transition-delay: 300ms;\n                border-width: 0 10px 10px;\n            }\n        }\n        &:after {\n            content: ' klicka för mer';\n            top: 101%;\n            top: calc(100% + 0.99px);\n            border-bottom: 10px solid #fff;\n            opacity: 1;\n            font-size: 0;\n            text-indent: 10000px;\n        }\n    }\n    \n}\n\n@mixin ribbon() {\n    @include typo-regular();\n    display: inline-block;\n    position: relative;\n    z-index: 2;\n    max-width: 100%;\n    padding: 0.6em 1em;\n    color: #fff;\n    background-color: $color-primary;\n    border-radius: 3px;\n    font-size: $font-size-xxs;\n    font-weight: 500;\n    line-height: 1;\n    text-transform: uppercase;\n    text-shadow: none;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n@mixin section-serif() {\n    text-align: center;\n    max-width: $width-sm;\n    margin: -0.5em auto $gutter*3; // 0.5em visual adjustment\n    @media (min-height: $h-md-and-up) {\n        margin-bottom: $gutter*4;\n    }\n    @media print {\n        text-align: left;\n        max-width: $print-width;\n    }\n}\n@mixin section-header-title() {\n    @include typo-smallcaps();\n    font-size: $font-size-xl;\n    margin-top: 0;\n    margin-bottom: $gutter/2;\n    @media (max-width: $less-than-xs) {\n        font-size: $font-size-lg;\n        @include typo-smallcaps();\n        margin-bottom: $gutter/2;\n    }\n    &:not(h2) { // oooh, hacky. This is a back fix to allow h2 and h3 to have the same class but different sizes - essentially we realised (after the fact) the mixin would suddenly make both headlines the same size in the card grid and wanted to fix that without changing the markup with new/additional classes.\n        font-size: $font-size-lg;\n    }\n    // page/section themes (using the cascade/specificity to our benefit)\n    .Theme--primary &,\n    .Section.Theme--primary & {\n        color: $color-primary;\n    }\n}\n@mixin section-header-text() {\n    margin: 0;\n}\n\n/* PATTERNS */\n\n@mixin grid-row ($allWidths:\"\",$gutters:\"\") {\n    @if $allWidths == \"allWidths\" {\n        display: flex;\n        justify-content: flex-start;\n        align-items: stretch;\n        flex-wrap: wrap;\n        @if $gutters == \"gutters\" {\n            margin-left: -$gutter;\n            margin-right: -$gutter;\n        }\n        text-align: left;\n        font-size: 0;\n        .ios8 & { // iOS8 hack\n            display: -webkit-flex;\n            -webkit-justify-content: center;\n            -webkit-flex-wrap: wrap;\n        }\n        &--center,\n        .Section--center & {\n            justify-content: center;\n        }\n    } @else {\n        @media (min-width:$sm-and-up) { \n            display: flex;\n            justify-content: flex-start;\n            align-items: stretch;\n            flex-wrap: wrap;\n            margin-left: -$gutter;\n            margin-right: -$gutter;\n            text-align: left;\n            font-size: 0;\n            .ios8 & { // iOS8 hack\n                display: -webkit-flex;\n                -webkit-justify-content: center;\n                -webkit-flex-wrap: wrap;\n            }\n            &--center,\n            .Section--center & {\n                justify-content: center;\n            }\n        }\n    }\n    &--left {\n        text-align: left;\n    }\n    &--contained {\n        margin-left: 0;\n        margin-right: 0;\n    }\n}\n@mixin grid-column ($allWidths:\"\",$gutters:\"\") {\n    @if $allWidths == \"allWidths\" {\n        display: inline-block;\n        flex: 0 0;\n        vertical-align: top;\n        text-align: left;\n        font-size: 1rem;\n        @if $gutters == \"gutters\" {\n            margin-top: $gutter;\n            margin-bottom: $gutter;\n            padding-top: $gutter;\n            padding-bottom: $gutter;\n        }\n    } @else {\n        display: inline-block;\n        flex: 0 0;\n        vertical-align: top;\n        text-align: left;\n        font-size: 1rem;\n        @media (max-width:$less-than-sm) {\n            display: block;\n            @if $gutters == \"gutters\" {\n                margin-top: $gutter;\n                margin-bottom: $gutter;\n                padding-top: $gutter;\n                padding-bottom: $gutter;\n            }\n        }\n    }\n    .android-nochrome & {\n        margin-right: -3px;\n    }\n}\n@mixin grid-column-width ($colWidth,$allWidths:\"\",$gutters:\"\") {\n    @if $allWidths == \"allWidths\" {\n        @if $gutters == \"gutters\" {\n            flex-basis: colWidth;\n            width: $colWidth;\n            padding-left: $gutter;\n            padding-right: $gutter;\n            .ie & {\n                flex-basis: auto;\n            }\n        } @else {\n            flex-basis: $colWidth;\n            width: $colWidth;\n            max-width: $colWidth;\n        }\n        .ios8 & {\n            -webkit-flex: 1 1 #{$colWidth};\n        }\n    } @else {\n        @if $gutters == \"gutters\" {\n            @media (min-width:$sm-and-up) {\n                flex-basis: $colWidth;\n                width: $colWidth;\n                padding-left: $gutter;\n                padding-right: $gutter;\n                .ie & {\n                    flex-basis: auto;\n                }\n            }\n        } @else {\n            @media (min-width:$sm-and-up) {\n                flex-basis: $colWidth;\n                width: $colWidth;\n                max-width: $colWidth;\n            }\n        }\n        .ios8 & {\n            -webkit-flex: 1 1 #{$colWidth};\n        }\n    }\n}\n\n/* ACCESSIBILITY */\n\n@mixin readyFallback ($selectorReady:\"\",$wait:5000ms) {\n    @supports (animation: inherit) {\n        @if $selectorReady != \"\" {\n            &:not(#{$selectorReady}) {\n                animation: $wait fallback-load;\n            }\n            &#{$selectorReady} {\n                animation: fade-in 500ms;\n                animation-direction: forwards;\n            }\n        } @else {\n            animation: $wait fallback-load;\n        }\n    }\n}\n\n@mixin a11yOnly () {\n    position:absolute;\n    left: 0;\n    width: 1px;\n    height: 1px;\n    font-size: 1px;\n    padding-left: 1px;\n    overflow: hidden;\n}\n\n@mixin a11yFocus () {\n    &.focus-visible:focus { @content; }\n}\n\n@mixin a11yTextFocusInner ($display:\"\",$tint:0.3,$shadow:5px) {\n    outline: none;\n    color: #000;\n    background-color: rgba($color-focus,$tint);\n    border: none;\n    border-radius: 5px;\n    box-shadow: 0 0 0 $shadow rgba($color-focus,$tint);\n    transition: background-color 500ms, box-shadow 500ms;\n    //animation: allyFocusPing 500ms;\n}\n\n@mixin a11yTextFocus ($display:\"\",$tint:0.3,$shadow:5px) {\n    &:focus {\n        outline: none;\n    }\n    @if $display == \"\" {\n        display: inline-block;\n    }\n    @include a11yFocus() {\n        @include a11yTextFocusInner($display,$tint,$shadow);\n    }\n}\n\n@mixin a11yShadowFocusInner ($noRadius:\"\",$tint:0.3,$shadow:5px) {\n    outline: none;\n    @if $noRadius == \"\" {\n        border-radius: 5px;\n    }\n    box-shadow: 0 0 0 $shadow rgba($color-focus,$tint);\n    transition: box-shadow 500ms;\n    //animation: allyFocusPing 500ms;\n    @media (pointer: coarse) {\n        box-shadow: initial;\n    }\n}\n\n@mixin a11yShadowFocus ($noRadius:\"\",$tint:0.3,$shadow:5px) {\n    &:focus {\n        outline: none;\n    }\n    @include a11yFocus() {\n        @include a11yShadowFocusInner($noRadius,$tint,$shadow);\n    }\n}\n\n@mixin a11yBGFocusInner ($tint:1,$fg:#fff) {\n    outline: none;\n    color: $fg;\n    border-color: $fg;\n    fill: #fff;\n    background-color: rgba($color-focus,$tint);\n    transition: background-color 500ms, box-shadow 500ms;\n    //animation: allyFocusPing 500ms;\n}\n\n@mixin a11yBGFocus ($tint:1,$fg:#fff) {\n    &:focus {\n        outline: none;\n    }\n    @include a11yFocus() {\n        @include a11yBGFocusInner($tint,$fg);\n    }\n}\n\n@mixin printNoImage () {\n    border: 1px solid $color-grey4;\n    background: transparent;\n    position: relative;\n    &:before {\n        content: url(\"data:image/svg+xml;utf8,<svg width='712' height='428' xmlns='http://www.w3.org/2000/svg'><g><path d='M.835.5l711.03 425.82M707.165 2.5L.835 427.5' stroke='#ccc'/><text font-family='ArialMT, Arial' font-size='18' fill='#ddd'><tspan x='275.438' y='300'>bilden är inte laddad</tspan></text></g></svg>\");\n        position: absolute;\n        left: 0;\n        top: 0;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        height: 100%;\n    }\n}","// Width breakpoint helper classes\n//\n// Status: near final.\n//\n// These are quick helper classes to show or hide content on different screen sizes - they can be combined to span different screen ranges. Don't be tempted to hide lots of content on small screens - there's no evidence to support that mobile users don't want to see all the functionality that desktop users. Instead, design around it, or design from mobile viewpoint first.\n//\n// .Hide--xxs - hidden on screen sizes up to XS\n// .Hide--xs - hidden on screen sizes between XXS and SM\n// .Hide--sm - hidden on screen sizes between XS and MD\n// .Hide--md - hidden on screen sizes between SM and LG\n// .Hide--lg - hidden on screen sizes of LG or bigger\n//    \n// markup:\n// <div class=\"{$modifiers}\" style=\"padding: 15px; border: 1px solid #79ad3e; background: #ded; color: #79ad3e; text-align: center;\">This item is hidden on screen size of {$modifiers}</div>\n//\n// sg-wrapper:\n// <div class=\"Section-Inner\">\n//     <sg-wrapper-content/>\n// </div>\n//\n// Styleguide 1.13.3\n\n/* helper classes */\n\n.hide, // deprecated\n.Hide {\n    display: none;\n    &--xxs {\n        @media(max-width:$less-than-xs) {\n            display: none !important;\n        } \n    }\n    &--xs {\n        @media(min-width: $xs-and-up) and (max-width:$less-than-sm) {\n            display: none !important;\n        } \n    }\n    &--sm {\n        @media(min-width: $sm-and-up) and (max-width:$less-than-md) {\n            display: none !important;\n        } \n    }\n    &--md {\n        @media(min-width: $md-and-up) and (max-width:$less-than-lg) {\n            display: none !important;\n        } \n    }\n    &--lg {\n        @media(min-width: $lg-and-up) {\n            display: none !important;\n        } \n    }\n}","body {\n    position: relative;\n    max-width: 100%;\n    max-width: 100vw;\n    margin: 0;\n    padding: 0 env(safe-area-inset-right) 0 env(safe-area-inset-left);\n    color: $color-fg;\n    background: $color-bg;\n    -webkit-text-size-adjust: none;\n    overflow-x: hidden;\n    overflow-y: auto;\n    @media print {\n        color: #000;\n        background: #fff;\n    }\n}\n* {\n    box-sizing: border-box;\n}\n::selection {\n    color: #fff;\n    background-color: $color-primary;\n}\n\na {\n    color: $color-primary;\n    text-decoration: none;\n}\n\nfieldset {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n\n// TYPOGRAPHY\n\nhtml,body {\n    font-size: $font-size-base;\n    font-family: $font-default;\n    line-height: $line-height-default;\n}\n\n/* stacks */\n\nh1,\nh2 {\n    @include typo-smallcaps();\n    line-height: $line-height-header;\n    margin: 1em 0 0.5em;\n}\nh3 {\n    @include typo-smallcaps();\n    line-height: $line-height-header;\n    margin: 1.1em 0;\n}\nh4 {\n    @include typo-smallcaps();\n}\nh1,h2,h3,h4 {\n    b,strong {\n        @include typo-smallcaps();\n    }\n}\nh5,\nh6 {\n    @include typo-emphasis();\n}\n\n/* sizes */\nh6 {\n    font-size: $font-size-sm;\n}\nh5 {\n    font-size: $font-size-md;\n}\nh4 {\n    font-size: $font-size-md2;\n}\nh3 {\n    font-size: $font-size-lg;\n    @media (max-width: $less-than-xs) {\n        font-size: $font-size-lg-sm;\n    }\n}\nh2 {\n    font-size: $font-size-xl;\n    @media (max-width: $less-than-xs) {\n        font-size: $font-size-xl-sm;\n    }\n}\nh1 {\n    font-size: $font-size-xxl;\n    @media (max-width: $less-than-xs) {\n        font-size: $font-size-xxl-sm;\n    }\n}\n.clearmargin {\n    @include clearmargin();\n}\n.clearfix {\n    @include clearfix();\n}","// Colours\n//\n// Status: near final.\n// \n// Styleguide 1.10.\n\n// Colours - primary scale\n// \n// $color-primary - primary color\n// $color-primary-hi - primary tint 1\n// $color-primary-light - primary background\n// $color-primary-lo - primary tint 2\n//\n// markup:\n// <div style=\"background: {$modifiers};\" class=\"styleguide-color\">{$modifiers}</div>\n//\n// Styleguide 1.10.1.\n\n$color-fg: #fff;\n$color-bg: #2e2a24;\n$color-bg-hi: lighten($color-bg,1%);\n$color-bg-hi2: lighten($color-bg,30%);\n$color-bg-lo: darken($color-bg,1%);\n \n$color-primary: #c29c0e;\n$color-primary-hi: lighten($color-primary,45%);\n$color-primary-light: darken($color-primary,8%);\n$color-primary-lo: darken($color-primary,16%);\n$color-primary-lo2: darken($color-primary,20%);\n\n// Colours - grey scale\n// \n// $color-grey0 - grey tint0\n// $color-grey1 - grey tint1\n// $color-grey2 - grey tint2\n// $color-grey3 - grey tint3\n// $color-grey4 - grey tint4\n// $color-grey5 - grey tint5\n// $color-grey6 - grey tint6\n//\n// markup:\n// <div style=\"background: {$modifiers};\" class=\"styleguide-color\">{$modifiers}</div>\n//\n// Styleguide 1.10.2.\n\n$color-grey0: #f6f6f6;\n$color-grey1: #eee;\n$color-grey2: #ddd;\n$color-grey3: #ccc;\n$color-grey4: #999;\n$color-grey5: #666;\n$color-grey6: #333;\n\n// Colours - messaging scale\n// \n// $color-ok - success/OK/valid\n// $color-ok-hi - tint\n// $color-error - fail/error/in-valid\n// $color-error-hi - tint\n// $color-warning - warning/additional info\n// $color-warning-hi - tint\n//\n// markup:\n// <div style=\"background: {$modifiers};\" class=\"styleguide-color\">{$modifiers}</div>\n//\n// Styleguide 1.10.3.\n\n$color-ok: #2ECC40;\n$color-ok-hi: lighten($color-ok,45%);\n$color-error: #E34B4D;\n$color-error-hi: lighten($color-error,35%);\n$color-warning: #EFE9AB;\n$color-warning-lo: #be9200;\n$color-warning-alt: #ffd000;\n\n// Color applications - links\n//\n// $color-link - Link default colour\n// $color-link-hover - Link hover colour\n// $color-link-active - Link active colour\n// $color-link-visited - Link visited colour\n//\n// markup:\n// <div style=\"background: {$modifiers};\" class=\"styleguide-color\">{$modifiers}</div>\n//\n// Styleguide 1.10.5.\n\n$color-link: $color-primary;\n$color-link-hover: $color-primary-hi;\n$color-link-active: $color-primary-hi;\n$color-link-visited: $color-primary;\n\n// Color applications - inputs\n//\n// $color-input-line - Input line colour\n// $color-input-line-hover - Input hover line\n// $color-input-line-active - Input active line\n// $color-input-line-disabled - Input disabled line\n// $color-input-bg-disabled - Input disabled bg\n// $color-input-text-disabled - Input disabled text\n// $color-shadow - Inset and box shadow colour for inputs\n//\n// markup:\n// <div style=\"background: {$modifiers};\" class=\"styleguide-color\">{$modifiers}</div>\n//\n// Styleguide 1.10.6.\n\n$color-input-line: $color-grey3;\n$color-input-line-hover: $color-grey4;\n$color-input-line-focus: $color-primary;\n$color-input-line-active: $color-primary;\n$color-input-line-disabled: $color-grey3;\n$color-input-bg-disabled: $color-grey1;\n$color-input-text-disabled: $color-grey5;\n$color-shadow: rgba($color-grey3,0.5);\n$color-check: $color-primary;\n\n\n\n// Color applications - misc\n//\n// $color-line - Line colour (outlines, horizontal/vertical rules)\n// $color-imaloading - Underlying background to images etc, as a placeholder whilst loading\n// $stripes-imaloading - Underlying background pattern to images etc, as a placeholder whilst loading\n// $stripes-paloading - Underlying background pattern to small \"paloading\" indicators\n// $stripes-paloading-alt - As above but when it needs to sit on a dark background.\n// $color-focus - Accessibility focus color (normally used i a box shadow)\n//\n// markup:\n// <div style=\"background: {$modifiers};\" class=\"styleguide-color\">{$modifiers}</div>\n//\n// Styleguide 1.10.8.\n\n$color-line: $color-grey2;\n$color-divider: rgba($color-grey3,0.5);\n\n$color-imaloading: $color-bg-hi;\n$stripes-imaloading: linear-gradient(45deg, $color-bg-lo 25%, transparent 25%, transparent 75%, $color-bg-lo 75%, $color-bg-lo), linear-gradient(-45deg, $color-bg-lo 25%, transparent 25%, transparent 75%, $color-bg-lo 75%, $color-bg-lo);\n$size-imaloading: 120px 120px;\n\n$stripes-paloading: repeating-linear-gradient(-45deg,#fafafa,#fafafa 10px,#ddd 10px,#ddd 20px);\n$stripes-paloading-alt: repeating-linear-gradient(-45deg,#fafafa,#fafafa 10px,rgba(255,255,255,0.3) 10px,rgba(255,255,255,0.3) 20px);\n\n$color-focus: $color-primary;","$font-fallback: -apple-system, \n                BlinkMacSystemFont, \n                'Segoe UI', \n                Roboto, \n                Oxygen-Sans, \n                Ubuntu, \n                Cantarell, \n                'Helvetica Neue', \n                sans-serif;\n$font-default: 'proxima-nova',$font-fallback;\n$font-serif: 'mrs-eaves-roman-lining', baskerville, georgia, serif;\n$font-smallcaps: 'mrs-eaves-roman-small-caps', \"Bodoni 72 smallcaps\", \"Calibri\", \"Gill Sans MT\", georgia, serif;\n$font-color: #000;\n$font-size-base: 18px;\n$font-size-xxxs: 0.6rem;\n$font-size-xxs: 0.7rem;\n$font-size-xs: 0.8rem;\n$font-size-sm: 0.9rem;\n$font-size-md: 1rem;\n$font-size-md2: 1.25rem;\n$font-size-lg: 1.5rem;\n$font-size-lg-sm: 1.25rem;  // scale down for mobile\n$font-size-xl: 2rem;\n$font-size-xl-sm: 1.5rem;  // scale down for mobile\n$font-size-xxl: 2.8rem;\n$font-size-xxl-sm: 2rem;  // scale down for mobile\n$font-size-print: 16pt;\n$line-height-default: 1.64;\n$line-height-header: 1.3;\n","@keyframes fade-in {\n    0% { opacity: 0 }\n    100% { opacity: 1 }\n}","// JS: lazyloading\n// \n// To aid paload performance, we lazyload most images (apart from heros that are at the top of the page so would just appear slower if they were lazyloaded). \n// We've built our own lazyloading script that interacts with intersection observer, so that we can control the system and use the latest scroll performance techniques.\n// It's vanilla-JS, but does hook into the element binding system in this project. It is built to have exactly the same hooks and data attributes as the common [lazysizes](http://afarkas.github.io/lazysizes/index.html) library, to allow easy transition between the two systems. \n// The system carries out the following lifecycle:\n// 1. On page load/script initialisation, a lazyload instance is attached to each element in the page that has a class of ``.lazyload``\n// 2. As the element is initialised (normally at page load time), the script waits a frame (see RAF) then determines if it's an ``ÌMG``, ``PICTURE``, or an element with a ``background-image``. It collects the URLs to image files that are in data attributes and stores them in memory to reduce any DOM lookup later when page scrolling should be taking up CPU time.\n// 3. The element is then handed off to Intersection Observer, which will determine if 10% of the area 50px around the element is visible (``rootMargin`` and ``threshold`` are two settings within intersection observer).\n// 4. When Intersection Observer determines the threshold of visibility has be reached, it sets the status of the element to true (so that it's never triggered from this point on), and fills in the ``SRC``/``SRCSET``/``STYLE`` of the element (relevent to the type of element it is). After this, it triggers a custom event on the element ``imageLoaded`` - specifically used by the object fit polyfill to do it's stuff. It also adds ``.lazyloading`` class, to enable any visual CSS updates.\n// 5. Once the image file has fully loaded, the script changes the ``.lazyloading`` class to ``.lazyloaded``, to show that it has been completed.\n// 6. Once any fade in is complete, it removed the ``.lazyload`` class from the element.\n// ***\n// Note that ``NOSCRIPT`` alternatives are included so that even if JS doesn't load (search engines, screen readers, etc), the image still works. ***PLEASE*** include widths and heights on these images, even if they are not the right size for any particular page (all modules have CSS overrides to restrict images breaking layouts). Including image widths and heights can be used by browser engines and by JS helpers in this site to improve the user experience greatly.\n// All the following examples will work.\n// ***\n// **regular IMG tag**\n// ```\n// <img data-src=\"/path/to/image.jpg\" width=\"XXX\" height=\"XXX\" alt=\"hej!\" class=\"lazyload\" /><noscript><img src=\"/path/to/image.jpg\" /></noscript>\n// ```\n// **SRCSET IMG tag**\n// ```\n// <img data-src=\"/path/to/default.jpg\" data-srcset=\"/path/to/small.jpg 600w, /path/to/large.jpg 1200w\" sizes=\"(max-width: 600px) 50vw, 100vw\" width=\"XXX\" height=\"XXX\" alt=\"hej!\" class=\"lazyload\" /><noscript><img src=\"/path/to/default.jpg\" /></noscript>\n// ```\n// **PICTURE tag**\n// ```\n// <picture class=\"lazyload\">\n//     <source data-srcset=\"/path/to/small.jpg\" media=\"(max-width: 599px)\" />\n//     <source data-srcset=\"/path/to/large.jpg\" media=\"(min-width: 600px)\" />\n//     <img src=\"/path/to/small.jpg\" width=\"XXX\" height=\"XXX\" alt=\"hej!\" /> <!-- note the fallback isn't lazyloaded -->\n// </picture>\n// ```\n// **DIV bacground**\n// ```\n// <div class=\"lazyload\" data-bg=\"/path/to/background.jpg\"></div>\n// ```\n// \n// .\n// \n// Styleguide 5.3.\n\n// JS: lazyloading strut\n// \n// One of the problems with lazyloading is that the browser has no idea what the size of the final image is before it's loaded - especially in a resonsive site where the width and height can be fluid depending on the screen size. And that means as you scroll down the page and images are discovered and loaded, the page jumps around as the images expand and the content reflows. This is one of those semi-conscious things that gives the web that \"ugh, web pages\" feeling to people that would rather be in an app. So let's kill it with fire.\n//\n// If we wrap a lazyloaded **IMG** or **PICTURE** with a container that has the ``.lazyload-strut``, and the image has ``width=\"XXX\" height=\"XXX\"`` (the sizes don't need accurate for any particular screen size, they just need to be the correct natural width vs height aspect ratio of the image).\n//\n// At script initialisation (paload time), the lazyload script scans the page for those images with strut wrappers, collects the width/height of the image, calculates the aspect ratio and sets up the wrapper with a [padding-top hack](http://css-tricks.com/aspect-ratio-boxes/). This reserves the space that the image will later load into, reducing page re-layout and content re-flow.\n//\n// Once an image wrapper is *strutted*, it gets the class ``.lazyload-strut--ready``, and once all potential struts on the page are completed, the app is sent a ``lazyload-struts-ready`` event. This is particularly used by the masonry function in [card grids](/patterns/#!/section/3.22) as an indication that it's safe to start measuring image elements.\n// - Note that we only strut the height, the width is almost always determined by the module CSS.\n// - Many modules have fixed ratios on images (eg, 16:9 is the default for the [images block](/patterns/#!/section/3.15)), and this lazyloading strut is not needed in those cases as basically the same thing is baked into the module.\n// \n// .\n//\n// markup:\n// <span class=\"lazyload-strut\">\n//     <img data-src=\"static/imgs/dusk-md.jpg\" \n//        data-srcset=\" /static/imgs/dusk-lg.jpg 1600w, /static/imgs/dusk-md.jpg 1100w, /static/imgs/dusk-sm.jpg 600w\" \n//        width=\"1100\" \n//        height=\"743\" \n//        alt=\"test image alt\" \n//        class=\"lazyload\" />\n//     <noscript>\n//       <img src=\"static/imgs/dusk-md.jpg\" alt=\"\" class=\"\" />\n//     </noscript>\n// </span>\n// \n// sg-wrapper:\n// <div class=\"Section-Inner\" style=\"padding:20px;text-align:center;\">\n//     <sg-wrapper-content/>\n// </div>\n//\n// Styleguide 5.3.1.\n\n\nimg,\npicture {\n    &.lazyload {\n        opacity: 0;\n        transition: opacity 500ms;\n        &ed {\n            opacity: 1;\n        }\n    }\n}\n.lazyload {\n    &-strut {\n        &--ready {\n            display: block;\n            position: relative;\n            overflow: hidden;\n            img,\n            picture {\n                position: absolute;\n                left: 0;\n                top: 0;\n                width: 100%;\n                height: 100%;\n            }\n        }\n    }\n}\n\n","// JS: Object fit\n// \n// ``object-fit`` and ``object-position`` are CSS properties that allow images act like the common ``background-size:cover`` and ``background-position: 100% 50%`` properties, but on ``IMG`` and ``PICTURE`` elements.\n// If an ``IMG`` has an enforced size of 500x200px, ``object-fit`` will allow the image to fill that space and even choose which part of the image to focus on. \n// This is often more flexible than using ``background-size``, because we can use it in conjunction with ``SRCSET`` or ``PICTURE`` to allow responsive images without resorting to writing custom CSS in the view or JS. \n// But support for ``object-fit`` is not across-the-board, and existing polyfills are occasionally brittle when interacting with other techniques (eg lazyload), so this project has it's own polyfill.\n// The system carries out the following lifecycle:\n// 1. On page load/script initialisation, each element in the page that has a datatype of ``data-js-poly-object-fit`` is considered by the polyfill.\n// 2. If the browser supports ``object-position``, the polyfill ends here. It checks for ``object-position`` because some iOS versions support ``object-fit`` but not ``object-position``.\n// 3. If the browser does not support ``object-position``, it checks to see if it is a lazyloaded image (that has not yet been processed). If it is, it adds an event to wait for that lazyload event to happen before proceeding (and adds a class to the wrapper of ``ObjectFit--lazyload``). If it is not a lazyload image, it continues straight away.\n// 4. When the polyfil is instructed to run, it takes the ``currentSrc`` of the image (or ``src`` if it's not suppported by the browsers, but ``currentSrc`` is preferred because it will take the right file for a responsive image), and sets it as the background of the containing element.\n// 5. The container wrapping already has classes that determine that any image background will be the correct ``background-size`` and ``background-position``, so it mimics the effect of an object-fit element.\n// 6. The image itself is given a class of ``ObjectFit--hidden``, which in effect sets ``visibility:hidden``, revealing the image in the background.\n// 7. 50 ms later it adds a class of ``.ObjectFit--done`` (to fade in any lazy loaded images)\n// ***\n// The pattern to trigger and successfully run the polyfill is below. Note that any of the position classes that are added to the image, are reflected in the container too, so that when the polyfill runs, it's background image is in the same place as the object-fit image would be.\n// ```\n// <span class=\"ObjectFit Position--right--top\" data-js-poly-object-fit>\n//     <img src=\"/path/to/default.jpg\" srcset=\"/path/to/small.jpg 600w, /path/to/large.jpg 1200w\" sizes=\"(max-width: 600px) 50vw, 100vw\" class=\"THISMODULECLASS Position--right--top\" />\n// </span>\n// ```\n// Just to re-iterate, this polyfill will run in conjunction with the lazysizes technique used in this project.\n// ***\n// **NOTES**\n// - If you would normally place any particulat position styling on the image (floating, block etc), you'll need to do this on the container instead. \n// - It might be worth wrapping a span around the image soley for the purpose of this polyfill, do keep it clean of any other structural markup you have in the page.\n//\n// markup:\n// <iframe src=\"http://caniuse.com/object-fit/embed\" style=\"width: 100%;height: 365px;max-width:1200px;display: block; margin: 20px auto;\" scrolling=\"no\" frameborder=\"no\"></iframe>\n// \n// Styleguide 5.4.\n\n.ObjectFit {\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: 50% 50% !important;\n    img {\n        display: block; // if the image is \"inline\" or \"inline-block\", any whitespace around it will be interpreted as a blank space, resulting in unexpected results.\n    }\n    &--lazyload {\n        opacity: 0;\n        transition: opacity 500ms;\n    }\n    &--done {\n        opacity: 1;\n        background-size: cover;\n        background-repeat: no-repeat;\n    }\n    &--hidden {\n        visibility: hidden;\n    }\n}","// Vertical sections\n//\n// Status: near final\n//\n// A pattern to bring reliable, repeatable vertical rhythm and consistent centered column containers. Each section has a standard margin above it, providing control over spacing between sections.\n//\n// A section is based around an outer and an inner div. The outer should always be the width of the page (well, it also controls the page edge gutter, so maybe not the **whole** width), and controls the vertical margin between the previous section and this one. The inner div controls the width of the central column.\n//\n// .Section - a simple section that handles vertical spacing, and an inner container that handles column width.\n// \n// markup:\n// <div class=\"Section\">\n//     <div class=\"Section-Inner\">\n//         <h2>This is a section container</h2>\n//         Eiusmod eu id commodo labore incididunt anim consectetur deserunt amet minim labore non nostrud irure enim consectetur. Ad nisi laborum laborum nulla aute consectetur sunt ut aute mollit deserunt aute ullamco nostrud. Est tempor irure Lorem exercitation id ullamco nulla. Excepteur do enim in et occaecat veniam exercitation ea.\n//     </div>\n// </div>\n//\n// Styleguide 4.2.\n\n// Section margin options\n//\n// By default, margins between sections are pretty wide. There are two smaller margin options plus a fully collapsed margin if you need a block to be right up next to the preceding block. Most of these options have a smaller option for small/shallow screens.\n//\n// .Section - standard top margin\n// .Section.Section--sm - smaller top margin\n// .Section.Section--xs - smallest top margin\n// .Section.Section--no-margin - no top margin\n// \n// markup:\n// <div class=\"{$modifiers}\">\n//     <div class=\"Section-Inner\">\n//         <h2>This is a section container</h2>\n//         Eiusmod eu id commodo labore incididunt anim consectetur deserunt amet minim labore non nostrud irure enim consectetur. Ad nisi laborum laborum nulla aute consectetur sunt ut aute mollit deserunt aute ullamco nostrud. Est tempor irure Lorem exercitation id ullamco nulla. Excepteur do enim in et occaecat veniam exercitation ea.\n//     </div>\n// </div>\n//\n// Styleguide 4.2.1.\n\n// Section column widths\n//\n// The section inner div can have a variety of widths, all from the standard width variables (and with the same names).\n// \n// .Section-Inner - default, *LG* size (980px)\n// .Section-Inner.Section-Inner--xs - up to an *XS* size column (35rem)\n// .Section-Inner.Section-Inner--sm - up to an *SM* size column (40rem)\n// .Section-Inner.Section-Inner--md - up to an *MD* size column (50rem)\n// .Section-Inner.Section-Inner--lg - up to an *LG* size column (980px)\n// .Section-Inner.Section-Inner--xl - up to an *XL* size column (1200px)\n// .Section-Inner.Section-Inner--xxl - full width (or at least max size)\n// \n// markup:\n// <div class=\"Section\">\n//     <div class=\"{$modifiers}\">\n//         <h2>This is a section container</h2>\n//         Eiusmod eu id commodo labore incididunt anim consectetur deserunt amet minim labore non nostrud irure enim consectetur. Ad nisi laborum laborum nulla aute consectetur sunt ut aute mollit deserunt aute ullamco nostrud. Est tempor irure Lorem exercitation id ullamco nulla. Excepteur do enim in et occaecat veniam exercitation ea.\n//     </div>\n// </div>\n//\n// Styleguide 4.2.2.\n\n.Section {\n    margin: $gutter-section-md-sm $gutter 0;\n    page-break-inside: avoid;\n    @media (min-width: $xs-and-up) and (min-height: $h-md-and-up) {\n        margin: $gutter-section-md $gutter 0;\n    }\n\n    // iPhone x landscape\n    margin-left:  calc(#{$gutter} - env(safe-area-inset-left));\n    margin-right: calc(#{$gutter} - env(safe-area-inset-right));\n    @media (min-width: $xs-and-up) {\n        padding-left:  env(safe-area-inset-left);\n        padding-right: env(safe-area-inset-right);\n    }\n\n    // alternative margin sizes\n    &--lg {\n        margin-top: $gutter-section-lg-sm;\n        @media (min-width: $xs-and-up) and (min-height: $h-md-and-up) {\n            margin-top: $gutter-section-lg;\n        }\n    }\n    &--sm {\n        margin-top: $gutter-section-sm-sm;\n        @media (min-width: $xs-and-up) and (min-height: $h-md-and-up) {\n            margin-top: $gutter-section-sm;\n        }\n    }\n    &--xs {\n        margin-top: $gutter-section-xs-sm;\n        @media (min-width: $xs-and-up) and (min-height: $h-md-and-up) {\n            margin-top: $gutter-section-xs;\n        }\n    }\n    @media print {\n        margin-top: $print-margin;\n    }\n    &--no-margin {\n        margin-top: 0;\n    }\n\n    // sepcific uses\n    &--center {\n        text-align: center;\n        @media screen AND (max-width: $less-than-xs) {\n            text-align: left;\n        }\n        @media print {\n            text-align: left;\n        }\n    }\n    &--padding {\n        &-sm {\n            padding-top: $gutter-section-sm-sm;\n            padding-bottom: $gutter-section-sm-sm;\n        }\n        &-xs {\n            padding-top: $gutter-section-xs-sm;\n            padding-bottom: $gutter-section-xs-sm;\n        }\n    }\n\n    &-Inner {\n        @include clearmargin();\n        max-width: $width-lg;\n        margin-left: auto;\n        margin-right: auto;\n        \n        &--xxl {\n            max-width: 9000px;\n            max-width: 100vw;\n        }\n        &--xl {\n            max-width: $width-xl;\n        }\n        &--lg {\n            max-width: $width-lg;\n        }\n        &--md {\n            max-width: $width-md;\n        }\n        &--sm {\n            max-width: $width-sm;\n        }\n        &--xs {\n            max-width: $width-xs;\n        }\n        // specials\n        &--caged {\n            border: 1px solid #ddd;\n            border-radius: 10px;\n            padding: $gutter;\n        }\n        &>h1,\n        &>h2,\n        &>h3,\n        &>h4,\n        &>h5,\n        &>h6,\n        &>p {\n            &:first-child {\n                margin-top: 0;\n            }\n        }\n        &>h2 {\n            &:first-child {\n                margin-top: -0.25em;\n            }\n        }\n        @media print {\n            max-width: $print-width;\n        }\n    }\n\n}","// Size variables\n//\n// Status: near final.\n//\n// Styleguide 1.14.\n\n// Column widths\n//\n// These central column widths are used mainly by [Section 4.2: sections](/patterns/#!/section/4.2) or any element that wishes to replicate section widths.\n//\n// $width-xl - largest width of text column\n// $width-lg - large width of text column\n// $width-md - narrow width of text column\n// $width-sm - narrower width of text column\n// $width-xs - narrowest width of text column\n//\n// markup:\n// <div style=\"width: {$modifiers}; margin: 15px auto; padding: 5px 0; border: 1px solid #79ad3e; color: #79ad3e; background: #ded; text-align: center;\">{$modifiers}</div>\n//\n// Styleguide 1.14.1.\n\n$width-xl:          1200px;\n$width-lg:          980px;\n$width-md:          50rem;\n$width-sm:          40rem;\n$width-xs:          35rem;\n$pamax-width:    $width-lg; // deprecated\n\n\n// Gutters/spacings\n//\n// All spacings should be a multiple of the smallest gutter. For more details on section gutters, view [vertical sections - 4.2](/patterns/#!/section/4.2).\n//\n// $gutter - single gutter\n// $gutter-section-md - the margin between two vertical sections\n// $gutter-section-md-sm - the margin between two vertical sections on small screens\n//\n// markup:\n// <div style=\"--margin-var: calc({$modifiers}); box-sizing: content-box; display: block; margin: {$modifiers}; margin: var(--margin-var); padding: 5px; border: 1px solid #79ad3e; color: #79ad3e; background: #ded; text-align: center;\">{$modifiers}</div>\n// <!-- the CSS variables stuff is just to demonstrate this SASS in this pattern guide. It's not recommended -->\n//\n// sg-wrapper:\n// <div class=\"sg\" style=\"display: block; width: 400px; margin: 15px auto; position: relative; border: 1px solid #c00; background: #fcc; text-align: center;\">\n//   <sg-wrapper-content/>\n// </div>\n//\n// Styleguide 1.14.2.\n\n$gutter:                12px;\n$gutter-section-lg:     $gutter*10;\n$gutter-section-lg-sm:  $gutter*7;\n$gutter-section-md:     $gutter*6;\n$gutter-section-md-sm:  $gutter*5;\n$gutter-section-sm:     $gutter*4;\n$gutter-section-sm-sm:  $gutter*3;\n$gutter-section-xs:     $gutter*2;\n$gutter-section-xs-sm:  $gutter*2;\n\n\n\n\n// Misc variables\n//\n// Status: near final.\n//\n// Styleguide 1.5.\n\n\n// Misc variables - border radius\n//\n// $border-radius - standard border radius on all rounded boxes\n//\n// markup:\n// <div style=\"display: inline-block; border-radius: {$modifiers}; padding: 20px; border: 1px solid #999; color: #333; background: #eee; text-align: center;\">border-radius: {$modifiers}</div>\n//\n// sg-wrapper:\n// <div class=\"Section-Inner\">\n//   <sg-wrapper-content/>\n// </div>\n//\n// Styleguide 1.15.1.\n\n$border-radius:     5px;\n\n\n// Misc variables - shadow offset\n//\n// $shadow-offset - standard shadow offset on inputs and popovers\n//\n// markup:\n// <div style=\"display: inline-block; margin: 15px; padding: 20px; border: 1px solid #999; color: #333; background: #eee; text-align: center; box-shadow: {$modifiers} {$modifiers} 0 0 rgba(204, 204, 204, 0.5);\">box shadow: {$modifiers} {$modifiers} 0 0 rgba(204, 204, 204, 0.5)</div>\n// <div style=\"display: inline-block; margin: 15px; padding: 20px; border: 1px solid #999; color: #333; background: #eee; text-align: center; box-shadow: inset {$modifiers} {$modifiers} 0 0 rgba(204, 204, 204, 0.5);\">box shadow: inset {$modifiers} {$modifiers} 0 0 rgba(204, 204, 204, 0.5)</div>\n//\n// sg-wrapper:\n// <div class=\"Section-Inner\">\n//   <sg-wrapper-content/>\n// </div>\n//\n// Styleguide 1.15.2.\n\n$shadow-offset:     3px;\n\n\n\n// Misc variables - focus outline\n//\n// $color-input-outline - box-shadow property to add focus outline\n//\n// markup:\n// <div style=\"display: inline-block; margin: 15px; padding: 20px; border: 1px solid #999; color: #333; background: #eee; text-align: center; box-shadow: {$modifiers};\">box shadow: {$modifiers}</div>\n//\n// sg-wrapper:\n// <div class=\"Section-Inner\">\n//   <sg-wrapper-content/>\n// </div>\n//\n// Styleguide 1.15.3.\n\n$color-input-outline: 0 0 0 2px #fff, 0 0 7px 3px $color-focus;\n\n\n// standard drop shadow\n\n$regular-shadow: 0 2px 6px rgba(0,0,0,0.3);\n\n\n// button variables (not colours)\n\n$input-regular-padding-horiz: 1em;\n\n$btn-regular-padding-top: 0.65em;\n$btn-regular-padding-bottom: 0.85em;\n$btn-regular-padding-horiz: 2em;\n\n$btn-skinny-padding-top: 0.35em;\n$btn-skinny-padding-bottom: 0.40em;\n$btn-skinny-padding-horiz: 1em;\n\n$btn-fat-padding-top: 0.7em;\n$btn-fat-padding-bottom: 0.8em;\n$btn-fat-padding-horiz: 2em;\n\n$btn-fattest-padding-top: 1.45em;\n$btn-fattest-padding-bottom: 1.55em;\n$btn-fattest-padding-horiz: 2em;\n\n\n$btn-narrow-padding-horiz: 0.2em;\n\n$btn-wide-padding-horiz: 2em;\n\n// print stylesheets\n\n$print-width:       45rem;\n$print-margin:      $gutter*4;\n$print-top-offset:  100px;\n$print-header-line: 1.4;\n\n// aspect ratios. To use it as a padding hack you need it as a percentage, so do something like: padding-top: $aspect-ratio-31 * 1%;\n\n$aspect-ratio-169:  56.25;\n$aspect-ratio-1610: 62.5;\n$aspect-ratio-43:   75;\n$aspect-ratio-32:   66.667;\n$aspect-ratio-235:  42.5;\n$aspect-ratio-31:   33.333;\n\n\n// disc sizing\n\n$disc-size: 1.4em;\n$disc-padding-top: 0.17em;","// Typography\n//\n// Status: near final.\n// \n// Styleguide 1.12.\n\n// Typography stacks & typeface override\n//\n// Typography is set up so that basics primitives such as H1-H6 and P have default typefaces, but these can be overriden by any of the following classes.\n//\n// .default! - *No modifier*: Combination of Brandon Grotesque bold and light, and body copy in a system font stack.\n// .Typo--regular - Regular system font stack. *@mixin typo-regular()*\n// .Typo--emphasis - Bold system font stack. *@mixin typo-emphasis()*\n// .Typo--serif - Light Brandon Grotesque. *@mixin typo-serif()*\n// .Typo--serif - Bold Brandon Grotesque. *@mixin typo-serif()*\n// .Typo--smallcaps - FF Market brush script. *@mixin typo-header-smallcaps()*\n//\n// markup:\n// <h1 class=\"{$modifiers}\">H1: Duis do proident</h1>\n// <h2 class=\"{$modifiers}\">h2: Id duis incididunt</h2>\n// <h3 class=\"{$modifiers}\">h3: Pariatur proident</h3>\n// <h4 class=\"{$modifiers}\">h4: Commodo ad incididunt</h4>\n// <h5 class=\"{$modifiers}\">h5: Consequat aliqua excepteur</h5>\n// <h6 class=\"{$modifiers}\">h6: laborum officia ea sit officia et</h6>\n// <p class=\"{$modifiers}\">P: Proident qui adipisicing culpa ea duis duis ipsum. Commodo ad incididunt duis adipisicing irure velit cillum labore. Consequat aliqua excepteur id aute dolor eiusmod laborum officia ea sit officia et.</p>\n//\n// sg-wrapper:\n// <div class=\"Section\">\n// <div class=\"Section-Inner\">\n//     <sg-wrapper-content/>\n// </div>\n// </div>\n//\n// Styleguide 1.12.1.\n\n// Typography scale\n//\n// There is a typography class scale designed to keep consistency in text sizes. The base font size is 18px (with a 1.64 line height), plus headings (h1-h6) have their own pre-set metrics, but these can be overriden by any of the following classes (so you can make a symantic subheading H2 the same size as a H1 for example).\n//\n// .Typo--xs - XS         variable: *$font-size-xs* 0.8rem\n// .Typo--sm - SM         variable: *$font-size-sm* 0.9rem\n// .Typo--md - MD         variable: *$font-size-md* 1rem (base size 18px)\n// .Typo--md2 - MD2     variable: *$font-size-md2* 1.25rem\n// .Typo--lg - LG         variable: *$font-size-lg* 1.5rem - on XXS: *$font-size-lg-sm* 1.25rem\n// .Typo--xl - XL         variable: *$font-size-xl* 2rem - on XXS: *$font-size-xl-sm* 1.5rem\n// .Typo--xxl - XXL     variable: *$font-size-xxl* 3rem - on XXS: *$font-size-xxl-sm* 2rem\n//\n// markup:\n// <div class=\"{$modifiers}\">Dolore sit irure aliquip voluptate sint nostrud.</div>\n// <div class=\"{$modifiers} Typo--serif\">Dolore sit irure aliquip voluptate sint nostrud.</div>\n// <div class=\"{$modifiers} Typo--serif\">Dolore sit irure aliquip voluptate sint nostrud.</div>\n//\n// sg-wrapper:\n// <div class=\"Section\">\n// <div class=\"Section-Inner\">\n//     <sg-wrapper-content/>\n// </div>\n// </div>\n//\n// Styleguide 1.12.2.\n\n// Misc\n//\n// .Typo--center - centers text\n// .Typo--secondary - secondary text color\n//\n// markup:\n// <h2 class=\"{$modifiers}\">Dolore sit irure aliquip.</h2>\n// <h3 class=\"{$modifiers}\">Proident qui adipisicing culpa ea duis duis ipsum. Commodo ad incididunt duis adipisicing irure velit cillum labore. Consequat aliqua excepteur id aute dolor eiusmod laborum officia ea sit officia et. Aute nulla amet et consectetur incididunt et nostrud id elit aute. </h3>\n// <p class=\"{$modifiers}\">Velit esse cupidatat Lorem minim eiusmod anim consectetur voluptate aliqua Lorem in do enim do elit ullamco aliqua. Sint quis laborum dolore sunt mollit dolore proident mollit tempor occaecat deserunt laboris velit officia sunt magna. Nostrud nulla tempor sint enim deserunt ut elit nostrud exercitation id commodo esse sint non officia voluptate do. Excepteur ad elit quis excepteur deserunt nostrud ea sit. Ipsum commodo labore ullamco in consectetur ea et anim occaecat cupidatat mollit in sint non. Dolor aliquip exercitation exercitation ad non excepteur cillum eu excepteur magna. Enim laboris tempor nisi sit id tempor ullamco duis sit reprehenderit velit ad minim amet. </p>\n//\n// sg-wrapper:\n// <div class=\"Section\">\n// <div class=\"Section-Inner\">\n//     <sg-wrapper-content/>\n// </div>\n// </div>\n//\n// Styleguide 1.12.3.\n\n.Typo {\n    // sizes\n    &--xs,\n    &--sm,\n    &--md,\n    &--md2,\n    &--lg,\n    &--xl,\n    &--xxl {\n        letter-spacing: normal;\n    }\n    &--xs {\n        font-size: $font-size-xs;\n    }\n    &--sm {\n        font-size: $font-size-sm;\n    }\n    &--md {\n        font-size: $font-size-md;\n    }\n    &--md2 {\n        font-size: $font-size-md2;\n    }\n    &--lg {\n        font-size: $font-size-lg;\n        @media (max-width: $less-than-xs) {\n            font-size: $font-size-lg-sm;\n        }\n    }\n    &--xl {\n        font-size: $font-size-xl;\n        line-height: 1.3;\n        @media (max-width: $less-than-xs) {\n            font-size: $font-size-xl-sm;\n            line-height: inherit;\n        }\n    }\n    &--xxl {\n        font-size: $font-size-xxl;\n        line-height: 1.2;\n        @media (max-width: $less-than-xs) {\n            font-size: $font-size-xxl-sm;\n            line-height: 1.3;\n        }\n    }\n    // stacks\n    &--regular {\n        @include typo-regular();\n    }\n    &--emphasis {\n        @include typo-emphasis();\n    }\n    &--serif {\n        @include typo-smallcaps();\n    }\n    &--smallcaps {\n        @include typo-serif();\n    }\n    // colour\n    &--secondary {\n        color: $color-grey4;\n    }\n    &--center {\n        text-align: center;\n    }\n}","@import \"../../base/variables-colors\";\n@import \"../../base/variables-typography\";\n@import \"../../base/variables-breakpoints\";\n@import \"../../base/variables\";\n@import \"../../base/mixins\";\n\n.Text {\n    &--primary {\n        color: $color-primary;\n        @supports ( animation:none ) {\n            opacity: 0;\n            animation: fade-in 1000ms forwards;\n            animation-delay: 1500ms;\n        }\n        @media print {\n            color: $color-grey5;\n        }\n    }\n    &-Inner {\n        max-width: $width-sm;\n        margin: 0 auto;\n        font-size: 1rem;\n        &--xxl {\n          max-width: 9000px;\n          max-width: 100vw;\n        }\n        &--xl {\n          max-width: $width-xl;\n        }\n        &--lg {\n          max-width: $width-lg;\n        }\n        &--md {\n          max-width: $width-md;\n        }\n        &--sm {\n          // note this is the default\n        }\n        &--xs {\n          max-width: $width-xs;\n        }\n        @media print {\n            max-width: $print-width !important;\n        }\n    }\n    &-Expanded {\n        @include readyFallback('.Toggle-Content--ready');\n    }\n    &-Buttons {\n        position: relative;\n        bottom: -1px;\n        height: 0;\n        margin: $gutter*2 auto 0;\n        max-width: $width-sm;\n        visibility: hidden; // hide before JS is ready\n        @media (min-width: $sm-and-up) {\n            margin: $gutter*4 auto 0;\n        }\n        &:before { // separated from just having a bottom border on the div, so that if the next block is butted up against this block, the line is hidden underneath the next block's image/background/top-key-line, and not sitting next/on-top of it.\n            content: '';\n            position: absolute;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            z-index: 0;\n            border-bottom: 1px solid $color-line;\n        }\n        &.Toggle-Btn--ready {\n            visibility: visible; // reveal after JS is ready\n        }\n        .Text-Inner--xxl + & {\n          max-width: 9000px;\n          max-width: 100vw;\n        }\n        .Text-Inner--xl + & {\n          max-width: $width-xl;\n        }\n        .Text-Inner--lg + & {\n          max-width: $width-lg;\n        }\n        .Text-Inner--md + & {\n          max-width: $width-md;\n        }\n        .Text-Inner--xs + & {\n          max-width: $width-xs;\n        }\n        &-Btn {\n            margin-top: -1.4em;\n            &-Open {\n                display: inline;\n                .Toggle-Btn--on & {\n                    display: none;\n                }\n            }\n            &-Close {\n                display: none;\n                .Toggle-Btn--on & {\n                    display: inline;\n                }\n            }\n            &-Icon {\n                margin-right: -0.5em;\n            }\n        }\n    }\n}"],"sourceRoot":"/src"}