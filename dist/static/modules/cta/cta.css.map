{"version":3,"sources":["base/variables-breakpoints.scss","base/mixins.scss","modules/cta/cta.output.scss","base/variables.scss","base/variables-typography.scss","base/variables-colors.scss"],"names":[],"mappings":"AAoDA,YAAY;ACpDZ,gBAAgB;AAYhB,gBAAgB;AAoChB,cAAc;AA2Td,cAAc;AA+Hd,mBAAmB;AC3anB;EACI,mBAAmB,EAsCtB;EAvCD;IAGQ,cAAc;IACd,iBAAiB;IACjB,iBC5CiB,EDmEpB;IA5BL;MAOU,kBAAkB;MAClB,iBAAiB,EAClB;IATT;MAWU,kBCrDgB,EDsDjB;IAZT;MAcU,iBCvDe,EDwDhB;IAfT;MAiBU,iBCzDe,ED0DhB;IAlBT;MAuBU,iBC7De,ED8DhB;IACD;MAzBR;QA0BY,4BAAkC,EAEzC,EAAA;EA5BL;ID/BI,4GGrB2G;IHsB3G,oBAAoB;IACpB,mBAAmB;IACnB,oBAAoB;IACpB,uBAAuB;IAkTvB,gBGhUe;IHiUf,cAAc;IACd,mBAAsB;IC1PlB,mBAAmB,EACtB;IAhCL;MDzBQ,uBAAuB,EAC1B;IAkTD;MC1RJ;QD2RQ,kBGtUa;QHYjB,4GGrB2G;QHsB3G,oBAAoB;QACpB,mBAAmB;QACnB,oBAAoB;QACpB,uBAAuB;QAwTnB,mBAAsB,EC7PzB;QAhCL;UDzBQ,uBAAuB,EAC1B,EAAA;ICwBL;MDgSQ,kBG3Ua,EH4UhB;ICjSL;;MDqSQ,eI5Ue,EJ6UlB;ECtSL;IAkCQ,kBAAkB,EACrB;EAnCL;IAqCQ,oBAAgB,EACnB","file":"cta.css","sourcesContent":["// Breakpoints\n//\n// Status: near final.\n//\n// Styleguide 1.13.\n\n// Variables - Width Breakpoints\n//\n// Responsive design breakpoints are designed around common scenarios. Content should be designed to reformat when the content demands it, not ideals of what a device is, but the truth is that common breakpoints make development easier and more reliable by giving clear, and predictable, starting points to work from. If the content demands more finess, it should dictate it's own breakpoints.\n//\n// $xs-and-up - min-width: XS and greater: larger than all known phones in portrait, most small (7\") tablets\n// $sm-and-up - min-width: SM and greater: larger (9\") tablets in portrait\n// $md-and-up - min-width: MD and greater: smaller desktops and larger (9\") tablets in landscape\n// $lg-and-up - min-width: LG and greater: larger desktops, very large tablets\n// $less-than-xs - max-width: up to XXS\n// $less-than-sm - max-width: up to XS\n// $less-than-md - max-width: up to MD\n// $less-than-lg - max-width: up to LG\n//  \n// markup:\n// <div style=\"--width-var: calc({$modifiers}); width: {$modifiers}; width: var(--width-var); margin: 15px auto; padding: 5px 0; border: 1px solid #79ad3e; color: #79ad3e; background: #ded; text-align: center;\">{$modifiers}</div>\n// <!-- the CSS variables stuff is just to demonstrate this SASS in this pattern guide. It's not recommended -->\n//\n// Styleguide 1.13.1.\n\n$xs-and-up: 600px;\n$sm-and-up: 768px;\n$md-and-up: 980px;\n$lg-and-up: 1200px;\n\n$less-than-xs: $xs-and-up - 1px;\n$less-than-sm: $sm-and-up - 1px;\n$less-than-md: $md-and-up - 1px;\n$less-than-lg: $lg-and-up - 1px;\n\n// Variables - Height Breakpoints\n//\n// Height breakpoints aid a better user experience on shallow screens, such as smaller laptops or windows that have a lot of browser UI. If your content demands more precise breakpoints, create your own, but the ones below are used to start the process about thinking of what content should look like on different height screens. Mobile devices often override these breakpoints with width breakpoints following them, but the decision of what to do for each combination of screen size and orientation should be left up to the design and dev team.\n//\n// $h-sm-and-up - min-height: 400px and greater\n// $h-md-and-up - min-height: 700px and greater\n// $h-lg-and-up - min-height: 1200px and greater\n// $h-less-than-sm - max-height: 399px\n// $h-less-than-md - max-height: 699px\n// $h-less-than-lg - max-height: 1200px\n//  \n// markup:\n// <div style=\"--height-var: calc({$modifiers}); width: 300px; min-width: 20%; margin: 15px auto; height: {$modifiers}; height: var(--height-var);  padding: 0 15px; border: 1px solid #79ad3e; background: #ded; color: #79ad3e; display: flex; align-items: center; justify-content: center;\">{$modifiers}</div>\n// <!-- the CSS variables stuff is just to demonstrate this SASS in this pattern guide. It's not recommended -->\n//\n// Styleguide 1.13.2\n\n/* height */ \n\n$h-sm-and-up: 500px; // why 460? biger than an iPhone 6+ on it's side is 414 high, a Nexus 6P is 412px. More like a tablet on it's side. (I know, don't fit to the device, blah blah)\n$h-md-and-up: 721px; // why 721? because Samsung S8s are 720px high, and when combined with Samsung Browser - which can see 100vh as 622px or 720px high depending on if you're scrolled or not - we don't want elements to move around if the only thing you're doing is scrolling the page.\n$h-lg-and-up: 1200px;\n\n$h-less-than-sm: $h-sm-and-up - 1px;\n$h-less-than-md: $h-md-and-up - 1px;\n$h-less-than-lg: $h-lg-and-up - 1px;","/* RESPONSIVE */\n\n@mixin t-respond-to-webkit() {\n    @media screen and (-webkit-min-device-pixel-ratio:0) { @content; }\n}\n@mixin t-respond-to-trident() {\n    @media screen and (min-width: 0 \\0) { @content; }\n}\n@mixin t-respond-to-firefox() {\n    @media screen and (min--moz-device-pixel-ratio:0) { @content; } \n}\n\n/* TYPOGRAPHY */\n\n@mixin typo-regular() {\n    font-family: $font-default;\n    font-weight: normal;\n}\n@mixin typo-emphasis() {\n    font-family: $font-default;\n    font-weight: 550;\n}\n@mixin typo-serif() {\n    font-family: $font-serif;\n    font-weight: normal;\n    transform: scale(0.978);\n    transform-origin: 50% 50%;\n    .wf-mrseavesromanlining-n4-active & {\n        transform: none;\n    }\n}\n@mixin typo-smallcaps() {\n    font-family: $font-smallcaps;\n    font-weight: normal;\n    font-style: normal;\n    font-weight: normal;\n    letter-spacing: 0.07em;\n    .wf-mrseavesromansmallcaps-n4-active & {\n        letter-spacing: normal;\n    }\n}\n@mixin ellipsis() {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n\n/* ELEMENTS */\n\n@mixin clearfix {\n    &:after {\n        content: \"\";\n        display: table;\n        clear: both;\n    }\n}\n\n@mixin clearmargin { // clears margins bubbling up (t.ex, a headline with a neg top margin will move the whole containing section up that amount)\n    &:before {\n        content: '';\n        display: block;\n        height: 1px;\n        margin: 0 0 -1px;\n        padding: 0;\n    }\n}\n\n@mixin normalize-button() {\n    -webkit-appearance: none;\n    display: inline-block;\n    vertical-align: middle;\n    margin: 0;\n    padding: 0;\n    color: inherit;\n    background-color: transparent;\n    border-width: 0;\n    border-radius: 0;\n    font-family: $font-default;\n    font-weight: normal;\n    font-size: 1em;\n    line-height: inherit;\n    cursor: pointer;\n    outline: none;\n    -webkit-tap-highlight-color: rgba(255,255,255,0);\n}\n\n@mixin close-button() {\n    @include normalize-button();\n    width: 1.4em;\n    height: 1.4em;\n    padding: 0.2em;\n    font-size: $font-size-md2;\n    color: #000;\n    background: transparent;\n    border-radius: 100%;\n    transition: all 500ms;\n    -webkit-tap-highlight-color: rgba(255,255,255,0);\n    @media (pointer: coarse) { // on tap, show that the button was tapped when you take your finger off\n        transition-delay: 300ms;\n    }\n    @media (prefers-reduced-motion) {\n        transition: all 0ms;\n    }\n    &:focus {\n        @include a11yShadowFocus(noRadius);\n        @include a11yBGFocus();\n    }\n    &:active {\n        color: $color-primary;\n        transition-delay: 0ms;\n        background-color: lighten($color-primary, 60%);\n    }\n    .Icon {\n        display: block;\n        pointer-events: none;\n    }\n}\n\n@mixin ui-block-size($type: null) {\n    font-size: $font-size-md;\n    @if $type == 'input' {\n        padding: $btn-regular-padding-top $input-regular-padding-horiz $btn-regular-padding-bottom;\n    } @else {\n        padding: $btn-regular-padding-top $btn-regular-padding-horiz $btn-regular-padding-bottom;\n        @media (max-width: $less-than-xs) {\n            padding-left: $btn-skinny-padding-horiz;\n            padding-right: $btn-skinny-padding-horiz;\n        }\n    }\n}\n\n@mixin link() {\n    @include normalize-button();\n    vertical-align: baseline;\n    color: $color-link;\n    border-color: currentColor;\n    text-align: left;\n    text-decoration: none;\n    font-family: inherit;\n    transition-property: color, background-color;\n    transition-duration: 300ms;\n    -webkit-tap-highlight-color: rgba(255,255,255,0);\n    &:focus {\n        @include a11yTextFocus();\n    }\n    &:visited {\n        color: $color-link-visited;\n    }\n    &:hover {\n        color: $color-link-hover;\n        @media (pointer: coarse) {\n            color: $color-link;\n            border-color: $color-link;\n        }\n    }\n    &:active {\n        color: $color-link-active;\n        transition-duration: 0ms;\n    }\n}\n\n@mixin underlined ($dashed: false) {\n    display: inline-block;\n    vertical-align: baseline;\n    padding-bottom: 0px;\n    @if $dashed {\n        border-bottom: 1px dashed currentColor;\n    } @else {\n        border-bottom: 1px solid currentColor;\n    }\n}\n\n@mixin disc () {\n    @include typo-emphasis();\n    box-sizing: border-box;\n    display: inline-block;\n    font-size: 1em;\n    font-weight: bold;\n    width: $disc-size;\n    height: $disc-size;\n    padding: 0;\n    line-height: $disc-size;\n    color: #fff;\n    background: #999;\n    border-radius: 1000px;\n    text-align: center;\n    .edge &,\n    .ie & {\n        line-height: $disc-size - 0.15em;\n    }\n    .android & {\n        line-height: $disc-size + 0.1em;\n    }\n}\n\n@mixin pop-over($selectorOuter, $selectorButton, $event:'hover', $color:$color-primary) {\n    \n    #{$selectorOuter} {\n        @include normalize-button();\n        position: relative;\n        font-size: 1rem;\n        line-height: normal;\n        vertical-align: top;\n        white-space: normal;\n        text-align: left;\n        &-full {\n            position: absolute;\n            top: 40px;\n            top: calc(100% + 9px);\n            right: 1px;\n            z-index: 100;\n            width: 0px;\n            max-height: 0px;\n            overflow: hidden;\n            background-color: #fff;\n            border: 1px solid $color;\n            font-size: 1rem;\n            opacity: 0;\n            transform: translate3d(0,10px,0);\n            transition: opacity, transform, max-height, width, padding;\n            transition-duration: 300ms, 300ms, 0ms, 0ms, 0ms;\n            transition-delay: 100ms, 100ms, 400ms, 400ms, 400ms;\n            #{$selectorOuter}:hover & {\n                @media (pointer: coarse) {\n                    width: 0;\n                    max-height: 0;\n                }\n            }\n            #{$selectorOuter}--active {\n                width: 250px;\n                max-width: calc(100vw - 20px);\n                max-height: 999em;\n                opacity: 1;\n                padding: $gutter*2;\n                transform: translate3d(0,0,0);\n                transition-delay: 300ms;\n                &--titled {\n                    padding-top: $gutter*3;\n                }\n                &--md {\n                    width: 320px;\n                }\n                &--lg {\n                    width: 450px;\n                }\n                &--xl {\n                    width: 800px;\n                }\n            }\n            &--centered {\n                text-align: center;\n            }\n        }\n        &-title {\n            position: absolute;\n            top: $gutter;\n            left: $gutter;\n            color: $color;\n            text-align: left;\n        }\n    }\n    #{$selectorButton} {\n        &:before,\n        &:after {\n            content: '';\n            position: absolute;\n            top: 100%;\n            left: 50%;\n            z-index: 101;\n            max-height: 0;\n            margin-left: -10px;\n            border-right: 10px solid transparent;\n            border-left: 10px solid transparent;\n            border-bottom: 10px solid $color-primary;\n            border-width: 0;\n            opacity: 0;\n            overflow: hidden;\n            transition: opacity, transform, border-width;\n            transition-duration: 300ms, 300ms, 0ms;\n            transition-delay: 100ms, 100ms, 400ms;\n            transform: translate3d(0,10px,0);\n            #{$selectorOuter}:hover & {\n                @media (pointer: coarse) {\n                    max-height: 0;\n                }\n            }\n            #{$selectorOuter}--open & {\n                opacity: 1;\n                max-height: 10px;\n                transform: translate3d(0,0,0);\n                transition-delay: 300ms;\n                border-width: 0 10px 10px;\n            }\n        }\n        &:after {\n            content: ' klicka för mer';\n            top: 101%;\n            top: calc(100% + 0.99px);\n            border-bottom: 10px solid #fff;\n            opacity: 1;\n            font-size: 0;\n            text-indent: 10000px;\n        }\n    }\n    \n}\n\n@mixin ribbon() {\n    @include typo-regular();\n    display: inline-block;\n    position: relative;\n    z-index: 2;\n    max-width: 100%;\n    padding: 0.6em 1em;\n    color: #fff;\n    background-color: $color-primary;\n    border-radius: 3px;\n    font-size: $font-size-xxs;\n    font-weight: 500;\n    line-height: 1;\n    text-transform: uppercase;\n    text-shadow: none;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n@mixin section-serif() {\n    text-align: center;\n    max-width: $width-sm;\n    margin: -0.5em auto $gutter*3; // 0.5em visual adjustment\n    @media (min-height: $h-md-and-up) {\n        margin-bottom: $gutter*4;\n    }\n    @media print {\n        text-align: left;\n        max-width: $print-width;\n    }\n}\n@mixin section-header-title() {\n    @include typo-smallcaps();\n    font-size: $font-size-xl;\n    margin-top: 0;\n    margin-bottom: $gutter/2;\n    @media (max-width: $less-than-xs) {\n        font-size: $font-size-lg;\n        @include typo-smallcaps();\n        margin-bottom: $gutter/2;\n    }\n    &:not(h2) { // oooh, hacky. This is a back fix to allow h2 and h3 to have the same class but different sizes - essentially we realised (after the fact) the mixin would suddenly make both headlines the same size in the card grid and wanted to fix that without changing the markup with new/additional classes.\n        font-size: $font-size-lg;\n    }\n    // page/section themes (using the cascade/specificity to our benefit)\n    .Theme--primary &,\n    .Section.Theme--primary & {\n        color: $color-primary;\n    }\n}\n@mixin section-header-text() {\n    margin: 0;\n}\n\n/* PATTERNS */\n\n@mixin grid-row ($allWidths:\"\",$gutters:\"\") {\n    @if $allWidths == \"allWidths\" {\n        display: flex;\n        justify-content: flex-start;\n        align-items: stretch;\n        flex-wrap: wrap;\n        @if $gutters == \"gutters\" {\n            margin-left: -$gutter;\n            margin-right: -$gutter;\n        }\n        text-align: left;\n        font-size: 0;\n        .ios8 & { // iOS8 hack\n            display: -webkit-flex;\n            -webkit-justify-content: center;\n            -webkit-flex-wrap: wrap;\n        }\n        &--center,\n        .Section--center & {\n            justify-content: center;\n        }\n    } @else {\n        @media (min-width:$sm-and-up) { \n            display: flex;\n            justify-content: flex-start;\n            align-items: stretch;\n            flex-wrap: wrap;\n            margin-left: -$gutter;\n            margin-right: -$gutter;\n            text-align: left;\n            font-size: 0;\n            .ios8 & { // iOS8 hack\n                display: -webkit-flex;\n                -webkit-justify-content: center;\n                -webkit-flex-wrap: wrap;\n            }\n            &--center,\n            .Section--center & {\n                justify-content: center;\n            }\n        }\n    }\n    &--left {\n        text-align: left;\n    }\n    &--contained {\n        margin-left: 0;\n        margin-right: 0;\n    }\n}\n@mixin grid-column ($allWidths:\"\",$gutters:\"\") {\n    @if $allWidths == \"allWidths\" {\n        display: inline-block;\n        flex: 0 0;\n        vertical-align: top;\n        text-align: left;\n        font-size: 1rem;\n        @if $gutters == \"gutters\" {\n            margin-top: $gutter;\n            margin-bottom: $gutter;\n            padding-top: $gutter;\n            padding-bottom: $gutter;\n        }\n    } @else {\n        display: inline-block;\n        flex: 0 0;\n        vertical-align: top;\n        text-align: left;\n        font-size: 1rem;\n        @media (max-width:$less-than-sm) {\n            display: block;\n            @if $gutters == \"gutters\" {\n                margin-top: $gutter;\n                margin-bottom: $gutter;\n                padding-top: $gutter;\n                padding-bottom: $gutter;\n            }\n        }\n    }\n    .android-nochrome & {\n        margin-right: -3px;\n    }\n}\n@mixin grid-column-width ($colWidth,$allWidths:\"\",$gutters:\"\") {\n    @if $allWidths == \"allWidths\" {\n        @if $gutters == \"gutters\" {\n            flex-basis: colWidth;\n            width: $colWidth;\n            padding-left: $gutter;\n            padding-right: $gutter;\n            .ie & {\n                flex-basis: auto;\n            }\n        } @else {\n            flex-basis: $colWidth;\n            width: $colWidth;\n            max-width: $colWidth;\n        }\n        .ios8 & {\n            -webkit-flex: 1 1 #{$colWidth};\n        }\n    } @else {\n        @if $gutters == \"gutters\" {\n            @media (min-width:$sm-and-up) {\n                flex-basis: $colWidth;\n                width: $colWidth;\n                padding-left: $gutter;\n                padding-right: $gutter;\n                .ie & {\n                    flex-basis: auto;\n                }\n            }\n        } @else {\n            @media (min-width:$sm-and-up) {\n                flex-basis: $colWidth;\n                width: $colWidth;\n                max-width: $colWidth;\n            }\n        }\n        .ios8 & {\n            -webkit-flex: 1 1 #{$colWidth};\n        }\n    }\n}\n\n/* ACCESSIBILITY */\n\n@mixin readyFallback ($selectorReady:\"\",$wait:5000ms) {\n    @supports (animation: inherit) {\n        @if $selectorReady != \"\" {\n            &:not(#{$selectorReady}) {\n                animation: $wait fallback-load;\n            }\n            &#{$selectorReady} {\n                animation: fade-in 500ms;\n                animation-direction: forwards;\n            }\n        } @else {\n            animation: $wait fallback-load;\n        }\n    }\n}\n\n@mixin a11yOnly () {\n    position:absolute;\n    left: 0;\n    width: 1px;\n    height: 1px;\n    font-size: 1px;\n    padding-left: 1px;\n    overflow: hidden;\n}\n\n@mixin a11yFocus () {\n    &.focus-visible:focus { @content; }\n}\n\n@mixin a11yTextFocusInner ($display:\"\",$tint:0.3,$shadow:5px) {\n    outline: none;\n    color: #000;\n    background-color: rgba($color-focus,$tint);\n    border: none;\n    border-radius: 5px;\n    box-shadow: 0 0 0 $shadow rgba($color-focus,$tint);\n    transition: background-color 500ms, box-shadow 500ms;\n    //animation: allyFocusPing 500ms;\n}\n\n@mixin a11yTextFocus ($display:\"\",$tint:0.3,$shadow:5px) {\n    &:focus {\n        outline: none;\n    }\n    @if $display == \"\" {\n        display: inline-block;\n    }\n    @include a11yFocus() {\n        @include a11yTextFocusInner($display,$tint,$shadow);\n    }\n}\n\n@mixin a11yShadowFocusInner ($noRadius:\"\",$tint:0.3,$shadow:5px) {\n    outline: none;\n    @if $noRadius == \"\" {\n        border-radius: 5px;\n    }\n    box-shadow: 0 0 0 $shadow rgba($color-focus,$tint);\n    transition: box-shadow 500ms;\n    //animation: allyFocusPing 500ms;\n    @media (pointer: coarse) {\n        box-shadow: initial;\n    }\n}\n\n@mixin a11yShadowFocus ($noRadius:\"\",$tint:0.3,$shadow:5px) {\n    &:focus {\n        outline: none;\n    }\n    @include a11yFocus() {\n        @include a11yShadowFocusInner($noRadius,$tint,$shadow);\n    }\n}\n\n@mixin a11yBGFocusInner ($tint:1,$fg:#fff) {\n    outline: none;\n    color: $fg;\n    border-color: $fg;\n    fill: #fff;\n    background-color: rgba($color-focus,$tint);\n    transition: background-color 500ms, box-shadow 500ms;\n    //animation: allyFocusPing 500ms;\n}\n\n@mixin a11yBGFocus ($tint:1,$fg:#fff) {\n    &:focus {\n        outline: none;\n    }\n    @include a11yFocus() {\n        @include a11yBGFocusInner($tint,$fg);\n    }\n}\n\n@mixin printNoImage () {\n    border: 1px solid $color-grey4;\n    background: transparent;\n    position: relative;\n    &:before {\n        content: url(\"data:image/svg+xml;utf8,<svg width='712' height='428' xmlns='http://www.w3.org/2000/svg'><g><path d='M.835.5l711.03 425.82M707.165 2.5L.835 427.5' stroke='#ccc'/><text font-family='ArialMT, Arial' font-size='18' fill='#ddd'><tspan x='275.438' y='300'>bilden är inte laddad</tspan></text></g></svg>\");\n        position: absolute;\n        left: 0;\n        top: 0;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        height: 100%;\n    }\n}","@import \"../../base/variables-colors\";\n@import \"../../base/variables-typography\";\n@import \"../../base/variables-breakpoints\";\n@import \"../../base/variables\";\n@import \"../../base/mixins\";\n\n// CTA block\n//\n// Status: near final\n//\n// Basic CTA block.  Can inherit top/bottom keyline and colours options from [standard section options](/patterns/#!/section/4.2).\n//\n// Styleguide 3.17\n\n// CTA block width\n//\n// This module works with different standard column sizes. Default size is 980px wide.\n//\n// .default! - no modifier: LG/980px\n// .Section-Inner--xs - XS\n// .Section-Inner--sm - SM (standard text column width)\n//\n// markup:\n//    <link rel=\"stylesheet\" href=\"/static/modules/cta/cta.css\"> <script> </script>\n//    <div class=\"Section Cta\">\n//        <figure class=\"Section-Inner {$modifiers} Cta-Inner\">\n//            <figcaption class=\"Cta-Caption\">\n//                <h2 class=\"Cta-Title\">Vill du också har ett smartare hem</h2>\n//                <p class=\"Cta-Text\">Dolore exercitation consequat et fugiat cupidatat qui irure eu laboris consectetur adipisicing incididunt. Dolore exercitation consequat et fugiat cupidatat qui irure eu laboris consectetur adipisicing incididunt.</p>\n//            </figcaption>\n//            <div class=\"Btn-bar Cta-Btns\">\n//                <a href=\"#test1\" class=\"Btn Btn--bar Cta-Btn\">Button 1</a>\n//                <a href=\"#test1\" class=\"Btn Btn--bar Cta-Btn Btn--secondary\"><svg viewBox=\"0 0 512 512\" class=\"Icon Cta-Source-Icon\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-clock\"></use></svg> Button 2</a>\n//            </div>\n//        </figure>\n//    </div>\n//\n// Styleguide 3.17.1\n\n// CTA block buttons\n//\n// Multiple buttons (or no buttons) can be added. Each button can have a link (href) or a data-type added (for JS hooks), text and an optional icon, plus a class added (eg \"Button--secondary\")\n//\n// markup:\n//    <link rel=\"stylesheet\" href=\"/static/modules/cta/cta.css\"> <script> </script>\n//    <div class=\"Section Cta\">\n//        <figure class=\"Section-Inner Section-Inner--sm Cta-Inner\">\n//            <figcaption class=\"Cta-Caption\">\n//                <h2 class=\"Cta-Title\">Vill du också har ett smartare hem</h2>\n//                <p class=\"Cta-Text\">Dolore exercitation consequat et fugiat cupidatat qui irure eu laboris consectetur adipisicing incididunt. </p>\n//            </figcaption>\n//            <div class=\"Btn-bar Cta-Btns\">\n//                <a href=\"#test1\" class=\"Btn Btn--bar Cta-Btn\">Button with an href</a>\n//                <a class=\"Btn Btn--bar Cta-Btn\" data-example>Button with a data-type</a>\n//                <a href=\"#test1\" class=\"Btn Btn--bar Cta-Btn Btn--secondary\">With a class to set a colour</a>\n//                <a href=\"#test1\" class=\"Btn Btn--bar Cta-Btn Btn--secondary\"><svg viewBox=\"0 0 512 512\" class=\"Icon Cta-Source-Icon\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-clock\"></use></svg> With an icon</a>\n//            </div>\n//        </figure>\n//    </div>\n//\n// Styleguide 3.17.2\n\n\n.Cta {\n    text-align: center;\n    &-Inner {\n        margin-top: 0;\n        margin-bottom: 0;\n        max-width: $width-sm;\n        &.Section-Inner--xxl {\n          max-width: 9000px;\n          max-width: 100vw;\n        }\n        &.Section-Inner--xl {\n          max-width: $width-xl;\n        }\n        &.Section-Inner--lg {\n          max-width: $width-lg;\n        }\n        &.Section-Inner--md {\n          max-width: $width-md;\n        }\n        &.Section-Inner--sm {\n          // note this is the default\n        }\n        &.Section-Inner--xs {\n          max-width: $width-xs;\n        }\n        @media print {\n            max-width: $print-width !important;\n        }\n    }\n    &-Title {\n        @include section-header-title();\n        margin-top: -0.2em;\n    }\n    &-Text {\n        margin: 0 0 0.5em;\n    }\n    &-Btns {\n        margin-bottom: -$gutter/2;\n    }\n}","// Size variables\n//\n// Status: near final.\n//\n// Styleguide 1.14.\n\n// Column widths\n//\n// These central column widths are used mainly by [Section 4.2: sections](/patterns/#!/section/4.2) or any element that wishes to replicate section widths.\n//\n// $width-xl - largest width of text column\n// $width-lg - large width of text column\n// $width-md - narrow width of text column\n// $width-sm - narrower width of text column\n// $width-xs - narrowest width of text column\n//\n// markup:\n// <div style=\"width: {$modifiers}; margin: 15px auto; padding: 5px 0; border: 1px solid #79ad3e; color: #79ad3e; background: #ded; text-align: center;\">{$modifiers}</div>\n//\n// Styleguide 1.14.1.\n\n$width-xl:          1200px;\n$width-lg:          980px;\n$width-md:          50rem;\n$width-sm:          40rem;\n$width-xs:          35rem;\n$pamax-width:    $width-lg; // deprecated\n\n\n// Gutters/spacings\n//\n// All spacings should be a multiple of the smallest gutter. For more details on section gutters, view [vertical sections - 4.2](/patterns/#!/section/4.2).\n//\n// $gutter - single gutter\n// $gutter-section-md - the margin between two vertical sections\n// $gutter-section-md-sm - the margin between two vertical sections on small screens\n//\n// markup:\n// <div style=\"--margin-var: calc({$modifiers}); box-sizing: content-box; display: block; margin: {$modifiers}; margin: var(--margin-var); padding: 5px; border: 1px solid #79ad3e; color: #79ad3e; background: #ded; text-align: center;\">{$modifiers}</div>\n// <!-- the CSS variables stuff is just to demonstrate this SASS in this pattern guide. It's not recommended -->\n//\n// sg-wrapper:\n// <div class=\"sg\" style=\"display: block; width: 400px; margin: 15px auto; position: relative; border: 1px solid #c00; background: #fcc; text-align: center;\">\n//   <sg-wrapper-content/>\n// </div>\n//\n// Styleguide 1.14.2.\n\n$gutter:                12px;\n$gutter-section-lg:     $gutter*10;\n$gutter-section-lg-sm:  $gutter*7;\n$gutter-section-md:     $gutter*6;\n$gutter-section-md-sm:  $gutter*5;\n$gutter-section-sm:     $gutter*4;\n$gutter-section-sm-sm:  $gutter*3;\n$gutter-section-xs:     $gutter*2;\n$gutter-section-xs-sm:  $gutter*2;\n\n\n\n\n// Misc variables\n//\n// Status: near final.\n//\n// Styleguide 1.5.\n\n\n// Misc variables - border radius\n//\n// $border-radius - standard border radius on all rounded boxes\n//\n// markup:\n// <div style=\"display: inline-block; border-radius: {$modifiers}; padding: 20px; border: 1px solid #999; color: #333; background: #eee; text-align: center;\">border-radius: {$modifiers}</div>\n//\n// sg-wrapper:\n// <div class=\"Section-Inner\">\n//   <sg-wrapper-content/>\n// </div>\n//\n// Styleguide 1.15.1.\n\n$border-radius:     5px;\n\n\n// Misc variables - shadow offset\n//\n// $shadow-offset - standard shadow offset on inputs and popovers\n//\n// markup:\n// <div style=\"display: inline-block; margin: 15px; padding: 20px; border: 1px solid #999; color: #333; background: #eee; text-align: center; box-shadow: {$modifiers} {$modifiers} 0 0 rgba(204, 204, 204, 0.5);\">box shadow: {$modifiers} {$modifiers} 0 0 rgba(204, 204, 204, 0.5)</div>\n// <div style=\"display: inline-block; margin: 15px; padding: 20px; border: 1px solid #999; color: #333; background: #eee; text-align: center; box-shadow: inset {$modifiers} {$modifiers} 0 0 rgba(204, 204, 204, 0.5);\">box shadow: inset {$modifiers} {$modifiers} 0 0 rgba(204, 204, 204, 0.5)</div>\n//\n// sg-wrapper:\n// <div class=\"Section-Inner\">\n//   <sg-wrapper-content/>\n// </div>\n//\n// Styleguide 1.15.2.\n\n$shadow-offset:     3px;\n\n\n\n// Misc variables - focus outline\n//\n// $color-input-outline - box-shadow property to add focus outline\n//\n// markup:\n// <div style=\"display: inline-block; margin: 15px; padding: 20px; border: 1px solid #999; color: #333; background: #eee; text-align: center; box-shadow: {$modifiers};\">box shadow: {$modifiers}</div>\n//\n// sg-wrapper:\n// <div class=\"Section-Inner\">\n//   <sg-wrapper-content/>\n// </div>\n//\n// Styleguide 1.15.3.\n\n$color-input-outline: 0 0 0 2px #fff, 0 0 7px 3px $color-focus;\n\n\n// standard drop shadow\n\n$regular-shadow: 0 2px 6px rgba(0,0,0,0.3);\n\n\n// button variables (not colours)\n\n$input-regular-padding-horiz: 1em;\n\n$btn-regular-padding-top: 0.65em;\n$btn-regular-padding-bottom: 0.85em;\n$btn-regular-padding-horiz: 2em;\n\n$btn-skinny-padding-top: 0.35em;\n$btn-skinny-padding-bottom: 0.40em;\n$btn-skinny-padding-horiz: 1em;\n\n$btn-fat-padding-top: 0.7em;\n$btn-fat-padding-bottom: 0.8em;\n$btn-fat-padding-horiz: 2em;\n\n$btn-fattest-padding-top: 1.45em;\n$btn-fattest-padding-bottom: 1.55em;\n$btn-fattest-padding-horiz: 2em;\n\n\n$btn-narrow-padding-horiz: 0.2em;\n\n$btn-wide-padding-horiz: 2em;\n\n// print stylesheets\n\n$print-width:       45rem;\n$print-margin:      $gutter*4;\n$print-top-offset:  100px;\n$print-header-line: 1.4;\n\n// aspect ratios. To use it as a padding hack you need it as a percentage, so do something like: padding-top: $aspect-ratio-31 * 1%;\n\n$aspect-ratio-169:  56.25;\n$aspect-ratio-1610: 62.5;\n$aspect-ratio-43:   75;\n$aspect-ratio-32:   66.667;\n$aspect-ratio-235:  42.5;\n$aspect-ratio-31:   33.333;\n\n\n// disc sizing\n\n$disc-size: 1.4em;\n$disc-padding-top: 0.17em;","$font-fallback: -apple-system, \n                BlinkMacSystemFont, \n                'Segoe UI', \n                Roboto, \n                Oxygen-Sans, \n                Ubuntu, \n                Cantarell, \n                'Helvetica Neue', \n                sans-serif;\n$font-default: $font-fallback;\n$font-serif: 'mrs-eaves-roman-lining', baskerville, georgia, serif;\n$font-smallcaps: 'mrs-eaves-roman-small-caps', \"Bodoni 72 smallcaps\", \"Calibri\", \"Gill Sans MT\", georgia, serif;\n$font-color: #000;\n$font-size-base: 18px;\n$font-size-xxxs: 0.6rem;\n$font-size-xxs: 0.7rem;\n$font-size-xs: 0.8rem;\n$font-size-sm: 0.9rem;\n$font-size-md: 1rem;\n$font-size-md2: 1.25rem;\n$font-size-lg: 1.5rem;\n$font-size-lg-sm: 1.25rem;  // scale down for mobile\n$font-size-xl: 2rem;\n$font-size-xl-sm: 1.5rem;  // scale down for mobile\n$font-size-xxl: 3rem;\n$font-size-xxl-sm: 2rem;  // scale down for mobile\n$font-size-print: 16pt;\n$line-height-default: 1.64;\n$line-height-header: 1.3;\n","// Colours\n//\n// Status: near final.\n// \n// Styleguide 1.10.\n\n// Colours - primary scale\n// \n// $color-primary - primary color\n// $color-primary-hi - primary tint 1\n// $color-primary-light - primary background\n// $color-primary-lo - primary tint 2\n//\n// markup:\n// <div style=\"background: {$modifiers};\" class=\"styleguide-color\">{$modifiers}</div>\n//\n// Styleguide 1.10.1.\n\n$color-fg: #fff;\n$color-bg: #2e2a24;\n$color-bg-hi: #312c26;\n$color-bg-hi2: #9a8a76;\n$color-bg-lo: #2b2722;\n \n$color-primary: #ffcc00;\n$color-primary-hi: lighten($color-primary,45%);\n$color-primary-light: darken($color-primary,8%);\n$color-primary-lo: darken($color-primary,16%);\n$color-primary-lo2: darken($color-primary,20%);\n\n// Colours - grey scale\n// \n// $color-grey0 - grey tint0\n// $color-grey1 - grey tint1\n// $color-grey2 - grey tint2\n// $color-grey3 - grey tint3\n// $color-grey4 - grey tint4\n// $color-grey5 - grey tint5\n// $color-grey6 - grey tint6\n//\n// markup:\n// <div style=\"background: {$modifiers};\" class=\"styleguide-color\">{$modifiers}</div>\n//\n// Styleguide 1.10.2.\n\n$color-grey0: #f6f6f6;\n$color-grey1: #eee;\n$color-grey2: #ddd;\n$color-grey3: #ccc;\n$color-grey4: #999;\n$color-grey5: #666;\n$color-grey6: #333;\n\n// Colours - messaging scale\n// \n// $color-ok - success/OK/valid\n// $color-ok-hi - tint\n// $color-error - fail/error/in-valid\n// $color-error-hi - tint\n// $color-warning - warning/additional info\n// $color-warning-hi - tint\n//\n// markup:\n// <div style=\"background: {$modifiers};\" class=\"styleguide-color\">{$modifiers}</div>\n//\n// Styleguide 1.10.3.\n\n$color-ok: #2ECC40;\n$color-ok-hi: lighten($color-ok,45%);\n$color-error: #E34B4D;\n$color-error-hi: lighten($color-error,35%);\n$color-warning: #EFE9AB;\n$color-warning-lo: #be9200;\n$color-warning-alt: #ffd000;\n\n// Color applications - links\n//\n// $color-link - Link default colour\n// $color-link-hover - Link hover colour\n// $color-link-active - Link active colour\n// $color-link-visited - Link visited colour\n//\n// markup:\n// <div style=\"background: {$modifiers};\" class=\"styleguide-color\">{$modifiers}</div>\n//\n// Styleguide 1.10.5.\n\n$color-link: $color-primary;\n$color-link-hover: $color-primary-hi;\n$color-link-active: $color-primary-hi;\n$color-link-visited: $color-primary;\n\n// Color applications - inputs\n//\n// $color-input-line - Input line colour\n// $color-input-line-hover - Input hover line\n// $color-input-line-active - Input active line\n// $color-input-line-disabled - Input disabled line\n// $color-input-bg-disabled - Input disabled bg\n// $color-input-text-disabled - Input disabled text\n// $color-shadow - Inset and box shadow colour for inputs\n//\n// markup:\n// <div style=\"background: {$modifiers};\" class=\"styleguide-color\">{$modifiers}</div>\n//\n// Styleguide 1.10.6.\n\n$color-input-line: $color-grey3;\n$color-input-line-hover: $color-grey4;\n$color-input-line-focus: $color-primary;\n$color-input-line-active: $color-primary;\n$color-input-line-disabled: $color-grey3;\n$color-input-bg-disabled: $color-grey1;\n$color-input-text-disabled: $color-grey5;\n$color-shadow: rgba($color-grey3,0.5);\n$color-check: $color-primary;\n\n\n\n// Color applications - misc\n//\n// $color-line - Line colour (outlines, horizontal/vertical rules)\n// $color-imaloading - Underlying background to images etc, as a placeholder whilst loading\n// $stripes-imaloading - Underlying background pattern to images etc, as a placeholder whilst loading\n// $stripes-paloading - Underlying background pattern to small \"paloading\" indicators\n// $stripes-paloading-alt - As above but when it needs to sit on a dark background.\n// $color-focus - Accessibility focus color (normally used i a box shadow)\n//\n// markup:\n// <div style=\"background: {$modifiers};\" class=\"styleguide-color\">{$modifiers}</div>\n//\n// Styleguide 1.10.8.\n\n$color-line: $color-grey2;\n$color-divider: rgba($color-grey3,0.5);\n\n$color-imaloading: $color-bg-hi;\n$stripes-imaloading: linear-gradient(45deg, $color-bg-lo 25%, transparent 25%, transparent 75%, $color-bg-lo 75%, $color-bg-lo), linear-gradient(-45deg, $color-bg-lo 25%, transparent 25%, transparent 75%, $color-bg-lo 75%, $color-bg-lo);\n$size-imaloading: 120px 120px;\n\n$stripes-paloading: repeating-linear-gradient(-45deg,#fafafa,#fafafa 10px,#ddd 10px,#ddd 20px);\n$stripes-paloading-alt: repeating-linear-gradient(-45deg,#fafafa,#fafafa 10px,rgba(255,255,255,0.3) 10px,rgba(255,255,255,0.3) 20px);\n\n$color-focus: $color-primary;"],"sourceRoot":"/src"}